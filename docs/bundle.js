/*! For license information please see bundle.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/Attribute/Attribute.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Attribute=void 0;t.Attribute=class{set id(e){this._id=e}get id(){return this._id}set descriptions(e){this._descriptions=e}get descriptions(){return this._descriptions}set isVisible(e){this._isVisible=e}get isVisible(){return this._isVisible}set parameterBuffMap(e){this._parameterBuffMap=e}get parameterBuffMap(){return this._parameterBuffMap}set parameterDebuffMap(e){this._parameterDebuffMap=e}get parameterDebuffMap(){return this._parameterDebuffMap}constructor(e,t,n,r,a){this._id=e,this._descriptions=t,this._isVisible=n,this._parameterBuffMap=r,this._parameterDebuffMap=a}}},"./src/Attribute/AttributeConstants.ts":(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TRIGGER_HANDLER_MAP=t.PERSISTENT_HANDLER_MAP=t.MUTURAL_EXCLUSIVE_ATTRIBUTE_GROUPS=t.PERSONAILITY_ATTRIBUTE_IDS=t.GIFTED_ATTRIBUTE_IDS=void 0;const r=n("./src/Game/RoundConstants.ts");function a(){return!0}function i(){return!1}function o(e,t){return"coding"==e&&3==t}t.GIFTED_ATTRIBUTE_IDS=[0,1,2,3,4,5,6,7,8,9,14,15],t.PERSONAILITY_ATTRIBUTE_IDS=[14,15],t.MUTURAL_EXCLUSIVE_ATTRIBUTE_GROUPS=[[0,1],[2,3],[4,5,6],[7,8],[8,9],[14,15]],t.PERSISTENT_HANDLER_MAP=new Map([[0,a],[1,a],[2,a],[3,a],[4,a],[5,a],[6,a],[7,a],[8,a],[9,a],[10,function(e){return 0==r.SUMMER_I_ROUNDS.filter((t=>e.round>=t)).length}],[11,function(e){return 1==r.SUMMER_I_ROUNDS.filter((t=>e.round==t)).length}],[12,a],[13,a],[14,a],[15,a]]),t.TRIGGER_HANDLER_MAP=new Map([[0,o],[1,o],[2,a],[3,a],[4,a],[5,a],[6,a],[7,a],[8,a],[9,a],[10,a],[11,a],[12,a],[13,a],[14,i],[15,i]])},"./src/Attribute/AttributeHelper.ts":(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.finalizeParameterDelta=t.getMutualExclueAttributeGroup=void 0;const r=n("./src/Attribute/AttributeConstants.ts");t.getMutualExclueAttributeGroup=function(e){for(let t=0;t<r.MUTURAL_EXCLUSIVE_ATTRIBUTE_GROUPS.length;++t)if(r.MUTURAL_EXCLUSIVE_ATTRIBUTE_GROUPS[t].includes(e))return t;return-1},t.finalizeParameterDelta=function(e,t,n){let r=0;for(let[a,i]of n.entries())if(a==t){r+=e*i;break}return r}},"./src/Attribute/AttributeManager.ts":(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AttributeManager=void 0;const r=n("./src/Attribute/AttributeConstants.ts"),a=n("./src/Attribute/Attribute.ts"),i=n("./src/Attribute/AttributeHelper.ts"),o=n("./src/Attribute/Static/AttributeTexts.ts"),s=n("./src/Utils/UtilFns.ts");t.AttributeManager=class{constructor(){this._activatedAttribute=[]}getActivatedAttributeIds(){return this._activatedAttribute.map((e=>e.id))}getVisibleActivatedAttributeDescriptions(){let e=[];for(let t of this._activatedAttribute)t.isVisible&&e.push(t.descriptions);return e}getAttributeAffectOnParameter(e,t,n){if((0,s.DebugLogger)("Change parameter "+e+", delta "+t+", event id "+n),null==n)return t;let a=t;for(let o of this._activatedAttribute)r.TRIGGER_HANDLER_MAP.get(o.id)(e,n)&&(t>0?((0,s.DebugLogger)(o.parameterBuffMap),a+=(0,i.finalizeParameterDelta)(t,e,o.parameterBuffMap)):t<0&&((0,s.DebugLogger)(o.parameterDebuffMap),a+=(0,i.finalizeParameterDelta)(t,e,o.parameterDebuffMap)));return(0,s.DebugLogger)("Finalized parameter "+e+" to "+a),a}disableAttribute(e){this._activatedAttribute=this._activatedAttribute.filter((t=>!e.includes(t.id)))}activateAttribute(e){for(let t of e){if(0!=this._activatedAttribute.filter((e=>e.id==t)).length)continue;let e=o.ATTRIBUTE_TEXT_MAP.get(t),n=e[0],r=e[1],i=e[2],s=e[3],u=new Map([["study",s[0]],["coding",s[1]],["health",s[2]],["working",s[3]],["interview",s[4]]]),l=e[3],d=new Map([["study",l[0]],["coding",l[1]],["health",l[2]],["working",l[3]],["interview",l[4]]]),h=new a.Attribute(t,[n,r],i,u,d);this._activatedAttribute.push(h)}}updateActivatedAttributes(e,t=!1){let n=[];for(let a of Array.from(this._activatedAttribute))if(1==t)n.push(a.id);else{r.PERSISTENT_HANDLER_MAP.get(a.id)(e)||n.push(a.id)}this.disableAttribute(n)}}},"./src/Attribute/Static/AttributeTexts.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ATTRIBUTE_TEXT_MAP=void 0,t.ATTRIBUTE_TEXT_MAP=new Map([[0,["Former coding contestant","前算法竞赛选手",!0,[0,.5,0,0,0],[0,0,-.25,0,0]]],[1,["Hop into CS without experience","转码小白",!0,[0,-.25,0,0,0],[0,0,.25,0,0]]],[2,["Experienced in self-cooking","精通自炊",!0,[0,0,0,0,0],[0,0,-.25,0,0]]],[3,["Sensitive and sickly","焦虑多病",!0,[0,0,0,0,0],[0,0,.25,0,0]]],[4,["Top 10 school","名校",!0,[-.2,0,0,0,1],[0,0,0,0,0]]],[5,["Syracuse university","雪城大学",!0,[0,0,0,0,0],[0,0,0,0,0]]],[6,["Community Collage","社区大学",!0,[1,0,0,0,0],[0,0,0,0,0]]],[7,["City that never sleeps","不夜城",!0,[-.15,-.15,.15,0,0],[0,0,-.05,0,0]]],[8,["More cows than people countryside","远郊大农村",!0,[.15,.15,-.15,0,0],[0,0,.1,0,0]]],[9,["Next to Silicon Vally","IT中心",!0,[0,0,0,0,5],[0,0,0,0,0]]],[10,["Have intership offer","有实习offer了",!0,[-.1,-.2,.2,0,0],[0,0,-.2,0,0]]],[11,["Intern in summer break","暑假实习",!0,[0,0,0,0,1],[0,0,0,0,0]]],[12,["Have return offer","有return offer",!0,[-.1,-.5,.5,0,0],[0,0,-.5,0,0]]],[13,["Have offer letter","有offer了",!0,[-.1,-.5,.5,0,0],[0,0,-.5,0,0]]],[14,["Nerd","书呆子",!0,[.2,.2,0,0,-.05],[0,0,.2,0,0]]],[15,["Socialite","交际花",!0,[.1,0,.2,0,.05],[0,0,-.2,0,0]]]])},"./src/Event/Event.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Event=void 0;t.Event=class{constructor(e,t,n,r){this._id=e,this._descriptions=t,this._options=n,this._handler=r}set id(e){this._id=e}get id(){return this._id}set descriptions(e){this._descriptions=e}get descriptions(){return this._descriptions}set options(e){this._options=e}get options(){return this._options}set handler(e){this._handler=e}get handler(){return this._handler}}},"./src/Event/EventConstants.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.GAME_OVER_EVENTS_MAP=t.UNEXECUTABLE_EVENT_IDS=t.PHASE_END_EVENT_ID=t.IN_PHASE_END_EVENT_ID=t.JOBHUNTING_EVENT_ID=t.RETURN_OFFER_EVAL_START_EVENT_ID=t.FINAL_TEST_START_EVENT_ID=t.COMPULSORY_EVENT_IDS=t.NORMAL_EVENT_ID=t.GAME_START_EVENT_ID=t.RESULT_EVENT_IDS=t.ALL_TIME_RANDOM_START_EVENT_ID=t.INTERN_ONLY_RANDOM_START_EVENT_ID=t.SEMASTER_ONLY_RANDOM_START_EVENT_ID=t.RANDOM_EVENT_IDS=void 0,t.RANDOM_EVENT_IDS=[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],t.SEMASTER_ONLY_RANDOM_START_EVENT_ID=[29,32,36,38,39,40,48],t.INTERN_ONLY_RANDOM_START_EVENT_ID=[44,45],t.ALL_TIME_RANDOM_START_EVENT_ID=[],t.RESULT_EVENT_IDS=[9,10,11,12],t.GAME_START_EVENT_ID=100,t.NORMAL_EVENT_ID=0,t.COMPULSORY_EVENT_IDS=[5,6,24,25,26],t.FINAL_TEST_START_EVENT_ID=5,t.RETURN_OFFER_EVAL_START_EVENT_ID=24,t.JOBHUNTING_EVENT_ID=7,t.IN_PHASE_END_EVENT_ID=307,t.PHASE_END_EVENT_ID=308,t.UNEXECUTABLE_EVENT_IDS=[307,308],t.GAME_OVER_EVENTS_MAP=new Map([[1,200],[3,501],[2,502],[4,503],[5,500],[6,504],[7,505]])},"./src/Event/EventDecorator.ts":(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.EventDecorator=void 0;const r=n("./src/Utils/SimpleTemplateRender.ts"),a=n("./src/Utils/UtilFns.ts"),i=n("./src/Event/OptionsMaskMap.ts");t.EventDecorator=class{constructor(){this._render=new r.SimpleTemplateRender}decorateEvent(e,t,n){let r=new Map;for(let[t,[a,i]]of e.options.entries())r.set(t,[this._render.render(a,n),this._render.render(i,n)]);i.OPTION_MASK_MAP.has(e.id)&&((0,a.DebugLogger)("masking the options"),r=i.OPTION_MASK_MAP.get(e.id)(r,t)),e.options=r;let o=this._render.render(e.descriptions[0],n),s=this._render.render(e.descriptions[1],n);e.descriptions=[o,s]}}},"./src/Event/EventHandlerMap.ts":(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.noopHandler=t.EVENT_HANDLER_MAP=void 0;const r=n("./src/Attribute/AttributeConstants.ts"),a=n("./src/Utils/Calendar.ts"),i=n("./src/Player/PlayerConstants.ts"),o=n("./src/Game/RoundConstants.ts"),s=n("./src/Utils/Rng.ts"),u=n("./src/Utils/SimpleTemplateRender.ts"),l=n("./src/Utils/UtilFns.ts"),d=new Map;function h(e){return e.maintain(),d}t.EVENT_HANDLER_MAP=new Map([[0,function(e){e.attributeIds.includes(10)&&o.SUMMER_I_ROUNDS.includes(e.round)&&e.assignAttribute([11]);return e.maintain(),d}],[1,function(e){return e.modifyParameter("study",2,1),e.modifyParameter("coding",-1,1),e.modifyParameter("health",-1,1),e.maintain(),d}],[2,function(e){if(e.modifyParameter("coding",-1,2),e.modifyParameter("health",-1,2),0==e.parameter.interviewProbability){let t=e.attributeIds,n=t.includes(9)?i.INITIAL_INTERVIEW_PROBABILITY_HIGH:t.includes(7)?i.INITIAL_INTERVIEW_PROBABILITY:i.INITIAL_INTERVIEW_PROBABILITY_LOW;e.parameter.interviewProbability=n}else e.modifyParameter("interview",1,2);if((0,a.isInVacation)(e.round)){let t=Math.min(e.parameter.study-i.INITIAL_STUDY_VALUE_LOW,10);e.modifyParameter("study",-1*t,null)}return e.maintain(),d}],[3,function(e){if(e.modifyParameter("coding",3,3),e.modifyParameter("health",-2,3),(0,a.isInVacation)(e.round)){let t=Math.min(e.parameter.study-i.INITIAL_STUDY_VALUE_LOW,10);e.modifyParameter("study",-1*t,null)}return e.maintain(),d}],[4,function(e){if(e.modifyParameter("coding",-2,4),e.modifyParameter("health",5,4),(0,a.isInVacation)(e.round)){let t=Math.min(e.parameter.study-i.INITIAL_STUDY_VALUE_LOW,10);e.modifyParameter("study",-1*t,null)}return e.maintain(),d}],[5,h],[6,function(e){let t=0,n=[];for(let r=0;r<3;++r){let r=(0,s.getNormalDistributedInt)(e.parameter.study,5);r<0&&(r=Math.abs(r)),r>100&&(r=100),t+=r,n.push((0,l.DisplayNumber)(r))}t/=3,(0,l.DebugLogger)("final score is "+t);let r="F";t>=95?(e.modifyParameter("health",5,6),r="A"):t>=80?(e.modifyParameter("health",2,6),r="A-"):t>=75?(r="B",e.modifyParameter("health",-2,6)):t>=60&&(e.modifyParameter("health",-4,6),r="C");e.parameter.scores.push(r);let a=new Map([["subject1",n[0]],["subject2",n[1]],["subject3",n[2]],["grade",r]]);return e.maintain(),a}],[7,function(e){let t=0==o.SUMMER_I_ROUNDS.filter((t=>e.round>=t)).length,n=e.companyNameHelper.getNextName("A nameless company");e.companyNameHelper.registerName(e.historyEvents.length,n);let r=new Map([["intern",t?u.CONDITION_TRUE:u.CONDITION_FALSE],["companyName",n]]);return e.maintain(),r}],[8,function(e){let t=(0,s.getRandomInt)(100)<=e.parameter.coding?9:10,n=e.historyEvents.length-1,r=e.companyNameHelper.retrieveName(n);e.roundResultEventQueue.push([e.round+1,t,n]);let a=new Map([["companyName",r]]);return e.modifyParameter("health",-2,8),e.maintain(),a}],[9,function(e,t){let n=(0,s.getRandomInt)(2)%2?11:12,r=e.companyNameHelper.retrieveName(t);e.roundResultEventQueue.push([e.round+1,n,t]);let a=new Map([["companyName",r]]);return e.modifyParameter("health",5,9),e.maintain(),a}],[10,function(e,t){let n=e.companyNameHelper.retrieveName(t),r=new Map([["companyName",n]]);return e.modifyParameter("health",-5,10),e.maintain(),r}],[11,function(e,t){let n=e.companyNameHelper.retrieveName(t),r=new Map([["companyName",n]]);return e.companyNameHelper.registerName(e.historyEvents.length,n),e.modifyParameter("health",-5,10),e.maintain(),r}],[12,function(e,t){let n=e.companyNameHelper.retrieveName(t),r=new Map([["companyName",n]]);return e.modifyParameter("health",-5,12),e.maintain(),r}],[13,function(e){let t=e.historyEvents.length-1;return e.roundResultEventQueue.push([e.round+2,14,t]),e.modifyParameter("health",2,13),e.maintain(),d}],[14,function(e,t){let n=[(0,s.getRandomInt)(100),(0,s.getRandomInt)(100),(0,s.getRandomInt)(100),(0,s.getRandomInt)(100),(0,s.getRandomInt)(100)].filter((t=>t<=e.parameter.coding)).length,r=n>=4?18:n<=1?19:15;e.roundResultEventQueue.push([e.round+1,r,t]);let a=e.companyNameHelper.retrieveName(t),i=new Map([["companyName",a]]);return e.modifyParameter("health",-5,14),e.maintain(),i}],[15,function(e,t){let n=e.companyNameHelper.retrieveName(t),r=new Map([["companyName",n]]);return e.companyNameHelper.registerName(e.historyEvents.length,n),e.modifyParameter("health",-5,14),e.maintain(),r}],[16,function(e){let t=e.historyEvents.length-1,n=e.companyNameHelper.retrieveName(t),r=new Map([["companyName",n]]);return e.roundResultEventQueue.push([e.round+1,17,t]),e.modifyParameter("health",-1,16),e.maintain(),r}],[17,function(e,t){let n=[(0,s.getRandomInt)(100),(0,s.getRandomInt)(100),(0,s.getRandomInt)(100),(0,s.getRandomInt)(100)].filter((t=>t<=e.parameter.coding)).length,r=n>=3?18:n<=1?19:15,a=e.companyNameHelper.retrieveName(t),i=new Map([["companyName",a]]);return e.roundResultEventQueue.push([e.round+1,r,t]),e.modifyParameter("health",-2,17),e.maintain(),i}],[18,function(e,t){e.modifyParameter("health",10,18),e.assignAttribute([13]);let n=e.companyNameHelper.retrieveName(t);e.offers.includes(n)||(e.offers+=e.offers.length?", ":"",e.offers+=n);let r=new Map([["companyName",n]]);return e.maintain(),r}],[19,function(e,t){e.modifyParameter("health",-10,18);let n=e.companyNameHelper.retrieveName(t),r=new Map([["companyName",n]]);return e.maintain(),r}],[20,function(e){let t=Math.min((0,s.getRandomInt)(20)+5,20);e.modifyParameter("working",t,20),e.modifyParameter("health",-2,20);let n=Math.min(e.parameter.study-i.INITIAL_STUDY_VALUE_LOW,10);e.modifyParameter("study",-1*n,null);let r=new Map([["normalWork",t>=10&&t<=13?u.CONDITION_TRUE:u.CONDITION_FALSE],["highWork",t>13?u.CONDITION_TRUE:u.CONDITION_FALSE]]);return e.maintain(),r}],[21,function(e){let t=e.historyEvents.length-1,n=e.companyNameHelper.retrieveName(t),r=new Map([["companyName",n]]),a=(0,s.getRandomInt)(100)<=e.parameter.coding?22:23;return e.modifyParameter("health",-2,8),e.roundResultEventQueue.push([e.round+1,a,t]),e.maintain(),r}],[22,function(e,t){let n=e.companyNameHelper.retrieveName(t);e.internOffers.includes(n)||(e.internOffers+=e.internOffers.length?", ":"",e.internOffers+=n);let r=new Map([["companyName",n]]);return e.modifyParameter("health",8,9),e.assignAttribute([10]),e.maintain(),r}],[23,function(e,t){let n=e.companyNameHelper.retrieveName(t),r=new Map([["companyName",n]]);return e.modifyParameter("health",-5,10),e.maintain(),r}],[24,h],[25,function(e){let t=(0,s.getRandomInt)(100),n=Math.min(e.parameter.working,85),r=new Map([["highWork",e.parameter.working>=80?u.CONDITION_TRUE:u.CONDITION_FALSE]]),a=e.internOffers;return e.roundResultEventQueue.push([e.round+1,t<=n?27:28,a]),e.modifyParameter("health",e.parameter.working>=80?5:2,25),e.maintain(),r}],[26,function(e){let t=(0,s.getRandomInt)(100),n=Math.min(e.parameter.working,20),r=new Map([["highWork",e.parameter.working>=80?u.CONDITION_TRUE:u.CONDITION_FALSE]]),a=e.internOffers;return e.roundResultEventQueue.push([e.round+1,t<=n?27:28,a]),e.modifyParameter("health",e.parameter.working>=80?0:-3,26),e.maintain(),r}],[27,function(e){let t=e.internOffers,n=new Map([["companyName",t]]);return e.assignAttribute([12]),e.maintain(),n}],[28,function(e){let t=e.internOffers,n=new Map([["companyName",t]]);return e.modifyParameter("health",-3,28),e.maintain(),n}],[29,h],[30,function(e){e.modifyParameter("interview",10,30);let t=new Map([["goodSchool",e.attributeIds.includes(4)?u.CONDITION_TRUE:u.CONDITION_FALSE],["badSchool",e.attributeIds.includes(6)?u.CONDITION_TRUE:u.CONDITION_FALSE],["goodPlace",e.attributeIds.includes(9)?u.CONDITION_TRUE:u.CONDITION_FALSE]]);return e.maintain(),t}],[31,function(e){let t=new Map([["goodPlace",e.attributeIds.includes(9)?u.CONDITION_TRUE:u.CONDITION_FALSE]]);return e.maintain(),t}],[32,h],[33,function(e){return e.modifyParameter("study",8,31),e.maintain(),d}],[34,function(e){return e.modifyParameter("health",2,34),e.maintain(),d}],[35,function(e){return e.modifyParameter("health",-2,34),e.maintain(),d}],[36,h],[37,function(e){let t=!1;t=e.attributeIds.includes(4)?(0,s.getRandomInt)(100)>=80:e.attributeIds.includes(6)?(0,s.getRandomInt)(100)>=20:(0,s.getRandomInt)(100)>=50;let n=e.parameter.study>=90,r=!1;t?e.modifyParameter("study",8,37):n?(e.modifyParameter("study",8,37),e.modifyParameter("health",-2,37)):(r=e.historyEvents.filter((([e,t])=>37==e&&null!=t&&t.get("cheatSuccess")==u.CONDITION_FALSE&&t.get("highStudy")==u.CONDITION_FALSE)).length>0,r&&(e.status=7),e.modifyParameter("study",-5,37),e.modifyParameter("health",-3,37));let a=new Map([["cheatSuccess",t?u.CONDITION_TRUE:u.CONDITION_FALSE],["highStudy",n?u.CONDITION_TRUE:u.CONDITION_FALSE],["caughtCheat",r?u.CONDITION_TRUE:u.CONDITION_FALSE]]);return e.maintain(),a}],[38,function(e){let t=e.parameter.study>=85;t?e.modifyParameter("study",2,38):(e.modifyParameter("study",-2,38),e.modifyParameter("health",-2,38));let n=new Map([["highStudy",t?u.CONDITION_TRUE:u.CONDITION_FALSE]]);return e.maintain(),n}],[39,function(e){return e.modifyParameter("study",-2,39),e.modifyParameter("health",-2,39),e.maintain(),d}],[40,function(e){let t=e.parameter.study>=85;t?e.modifyParameter("health",-2,40):(e.modifyParameter("study",-4,40),e.modifyParameter("health",-4,40));let n=new Map([["highStudy",t?u.CONDITION_TRUE:u.CONDITION_FALSE]]);return e.maintain(),n}],[41,function(e){let t=e.attributeIds.includes(14),n=e.attributeIds.includes(15);t?e.modifyParameter("health",-3,41):n?e.modifyParameter("health",3,41):e.modifyParameter("health",1,41);let r=new Map([["nerd",t?u.CONDITION_TRUE:u.CONDITION_FALSE],["social",n?u.CONDITION_TRUE:u.CONDITION_FALSE]]);return e.maintain(),r}],[42,function(e){let t=!(0,a.isInVacation)(e.round),n=(0,a.isInVacation)(e.round)&&e.attributeIds.includes(11),r=!t&&!n;t||n?e.modifyParameter("health",-2,42):e.modifyParameter("health",-1,42);let i=new Map([["inSemester",t?u.CONDITION_TRUE:u.CONDITION_FALSE],["inWork",n?u.CONDITION_TRUE:u.CONDITION_FALSE],["inRest",r?u.CONDITION_TRUE:u.CONDITION_FALSE]]);return e.maintain(),i}],[43,function(e){let t=(0,s.getRandomInt)(10);t>=3?e.modifyParameter("health",3,43):e.modifyParameter("health",-3,43);let n=new Map([["eatGood",t>=3?u.CONDITION_TRUE:u.CONDITION_FALSE]]);return e.maintain(),n}],[44,function(e){return e.modifyParameter("health",-1,44),e.maintain(),d}],[45,h],[46,function(e){return e.modifyParameter("health",-3,46),e.modifyParameter("work",-5,46),e.maintain(),d}],[47,function(e){let t=(0,s.getNormalDistributedInt)(e.parameter.coding,5)>=60;t?(e.modifyParameter("health",1,47),e.modifyParameter("coding",4,47)):e.modifyParameter("coding",2,47);let n=new Map([["goodRank",t?u.CONDITION_TRUE:u.CONDITION_FALSE]]);return e.maintain(),n}],[48,function(e){let t=(0,s.getRandomInt)(100),n=t<=e.parameter.study,r=t>e.parameter.study+10;n?(e.modifyParameter("health",2,48),e.modifyParameter("study",4,48)):r?(e.modifyParameter("health",-1,48),e.modifyParameter("study",-1,48)):(e.modifyParameter("health",1,48),e.modifyParameter("study",2,48));let a=new Map([["goodGrade",n?u.CONDITION_TRUE:u.CONDITION_FALSE],["badGrade",r?u.CONDITION_TRUE:u.CONDITION_FALSE]]);return e.maintain(),a}],[100,h],[101,function(e){let t=(0,s.getRandomInt)(3)+1,n=[];for(;n.length<t;){let e=r.GIFTED_ATTRIBUTE_IDS[(0,s.getRandomInt)(r.GIFTED_ATTRIBUTE_IDS.length)],t=!0;for(let a of n){for(let n of r.MUTURAL_EXCLUSIVE_ATTRIBUTE_GROUPS)if(n.includes(e)&&n.includes(a)){t=!1;break}if(!t)break}t&&n.push(e)}return n.sort(((e,t)=>e-t)),e.parameter.coding=n.includes(0)?i.INITIAL_CODING_VALUE_HIGH:n.includes(1)?i.INITIAL_CODING_VALUE_LOW:i.INITIAL_CODING_VALUE,e.parameter.health=n.includes(2)?i.INITIAL_HEALTH_VALUE:i.INITIAL_HEALTH_VALUE_LOW,e.parameter.health+=n.includes(7)?5:0,e.parameter.study=n.includes(4)?i.INITIAL_STUDY_VALUE_HIGH:n.includes(6)?i.INITIAL_STUDY_VALUE_LOW:i.INITIAL_STUDY_VALUE,e.parameter.interviewProbability=0,e.assignAttribute(n),d}],[102,h],[200,h],[307,h],[308,h],[500,function(e){return e.status=5,d}],[501,h],[502,h],[503,h],[504,function(e){return e.status=6,d}]]),t.noopHandler=h},"./src/Event/EventManager.ts":(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.EventManager=void 0;const r=n("./src/Event/Event.ts"),a=n("./src/Event/EventConstants.ts"),i=n("./src/Event/EventHandlerMap.ts"),o=n("./src/Event/RandomEventHelper.ts"),s=n("./src/Utils/Rng.ts"),u=n("./src/Event/Static/DescriptionTexts.ts"),l=n("./src/Event/Static/OptionTexts.ts"),d=n("./src/Event/EventDecorator.ts"),h=n("./src/Utils/UtilFns.ts");t.EventManager=class{constructor(){this._usedRandomEvent=[],this._render=new d.EventDecorator}executeEvent(e,t,n=null){let r=this.serveEvent(e),a=r.handler(t,n);return this._render.decorateEvent(r,t,a),t.historyEvents.push([e,a]),[r.descriptions,r.options]}serveEvent(e){if((0,h.DebugLogger)("Demands "+e),a.UNEXECUTABLE_EVENT_IDS.includes(e))return(0,h.DebugLogger)("Unexecutable event "+e+" should not be served, please debug"),new r.Event(e,["Unexecutable event "+e.toString(),""],new Map,i.noopHandler);let t=u.DESCRIPTION_TEXTS_MAP.get(e),n=l.OPTION_TEXT_MAP.get(e),o=new Map;for(let[e,t,r]of n)o.set(e,[t,r]);let s=i.noopHandler;return i.EVENT_HANDLER_MAP.has(e)?((0,h.DebugLogger)("Serving "+e),s=i.EVENT_HANDLER_MAP.get(e)):(0,h.DebugLogger)(e+" handler does not exist!"),new r.Event(e,t,o,s)}getNextRandomEvent(e){let t=(0,s.getRandomInt)(15),n=t<1?1:t<3?2:t<7?3:4;(0,h.DebugLogger)("require rarity: "+t);let r=[];for(let[t,a]of o.RANDOM_EVENT_AVAILABILITY_MAP.entries()){let i=a(e);this._usedRandomEvent.includes(t)||i!=n&&5!=i||r.push(t)}if((0,h.DebugLogger)("candidates are "+r),0==r.length)return-1;{let e=(0,s.getRandomInt)(r.length);return this._usedRandomEvent.push(r[e]),r[e]}}resetUsedRandomEvent(){this._usedRandomEvent=[]}}},"./src/Event/OptionsMaskMap.ts":(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OPTION_MASK_MAP=void 0;const r=n("./src/Utils/Calendar.ts"),a=n("./src/Game/RoundConstants.ts");t.OPTION_MASK_MAP=new Map([[0,function(e,t){(0,r.isInVacation)(t.round)&&e.delete(1);t.attributeIds.includes(11)||e.delete(20);return e}],[7,function(e,t){0==a.SUMMER_I_ROUNDS.filter((e=>e<=t.round)).length?e.delete(8):e.delete(21);return e}],[32,function(e,t){t.parameter.study<90&&!t.attributeIds.includes(14)&&e.delete(34);t.parameter.health>=40&&e.delete(35);return e}]])},"./src/Event/RandomEventHelper.ts":(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.RANDOM_EVENT_AVAILABILITY_MAP=void 0;const r=n("./src/Utils/Calendar.ts");function a(){return 0}function i(e){return e.attributeIds.includes(11)}t.RANDOM_EVENT_AVAILABILITY_MAP=new Map([[29,function(e){return[1,10,25,34].includes(e.round)?e.attributeIds.includes(9)?5:e.attributeIds.includes(4)||e.attributeIds.includes(7)?4:e.attributeIds.includes(6)?1:2:0}],[30,a],[31,a],[32,function(e){return(0,r.isInVacation)(e.round)?0:e.attributeIds.includes(15)?3:e.attributeIds.includes(16)?1:2}],[33,a],[34,a],[35,a],[36,function(e){return(0,r.isInVacation)(e.round)?0:e.attributeIds.includes(14)?1:2}],[37,a],[38,function(e){return(0,r.isInVacation)(e.round)?0:2}],[39,function(e){if((0,r.isInVacation)(e.round))return 0;return e.parameter.health<35?2:e.parameter.study<=50?3:1}],[40,function(e){return(0,r.isInVacation)(e.round)||e.parameter.study>=80?0:e.parameter.health<35?2:e.parameter.health>80?0:1}],[41,function(e){return e.attributeIds.includes(14)?1:e.attributeIds.includes(15)?4:e.parameter.health<=35?2:3}],[42,function(e){return e.parameter.health<35?4:e.parameter.health>80?1:e.attributeIds.includes(3)?3:e.attributeIds.includes(2)?1:2}],[43,function(e){return e.attributeIds.includes(2)?1:4}],[44,function(e){return i(e)?2:0}],[45,function(e){return i(e)?1:0}],[46,a],[47,function(e){return e.attributeIds.includes(1)?2:e.attributeIds.includes(0)?4:3}],[48,function(e){return(0,r.isInVacation)(e.round)?0:4}]])},"./src/Event/Static/DescriptionTexts.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DESCRIPTION_TEXTS_MAP=void 0,t.DESCRIPTION_TEXTS_MAP=new Map([[0,["It's a fresh sprint, Your plan is..","接下来的半个月要做些什么呢？"]],[1,["You revised the course materials, went to office hours, and more prepared for the final.","你复习了讲义, 参加了答疑, 你感觉对期末的准备更加充足了. "]],[2,["You surfed in LoopedIn, WasteDay and other job listing websites and posted your resume.<br>\n        Hopefully there will be some good news.","你花费了大部分时间在如 零英 等其他招聘网站上投递你的简历<br>\n        希望会有好消息吧. "]],[3,["You spent the time in LetsCode for code practicing.<br>\n        After coding and debugging and head stretching and keyboard punching,<br>\n        You felt your coding skill improved.","你花费了大部分的时间在 力抠 上刷题, <br>\n        几度debug到骂娘摔键盘砸鼠标之后, <br>\n        你感觉自己做题没那么蠢了. "]],[4,["You stayed in apartment, watching the YeahTube and spent the time leisurely. ","干活是不可能干活的, 三点多饮茶先啦, <br>\n        你度过了半个月的愉悦时光. "]],[5,["The end of this semester draws near, profressors have annouced the final examination date.<br>\n        And which is in this two weeks.","期末将至, 考试时间是半个月后. "]],[6,["You took the final on three subjects, the transcript is as below:<br>\n        {{ subject1 }}<br>\n        {{ subject2 }}<br>\n        {{ subject3 }}<br>\n        Your grade of this semester is {{ grade }}<br>\n        The semester ended after all the final examinations finished.","你参加了这学期三门课的期末, 成绩如下：<br>\n        {{ subject1 }}<br>\n        {{ subject2 }}<br>\n        {{ subject3 }}<br>\n        你这个学期的绩点是 {{ grade }}<br>\n        终于又混完了一个学期. "]],[7,["You received an email from HR at {{ companyName }}<br>\n        they invited you for {{ IF intern }}internship{{ FI }} phone interview this week!","有 {{ companyName }} 的HR来问你这周是否有空参加他们的{{ IF intern }}实习{{ FI }}面试. "]],[8,["You finished the phone interview with {{ companyName }}, HR told you to wait several days for the result.","{{ companyName }}的电面结束啦, HR说几天后出结果. "]],[9,["Congratulations! The HR from {{ companyName }} informed you that your phone interview has passed.<br>\n        They will be coordinating with you about the next step very soon.","恭喜! {{ companyName }} 的HR发来邮件祝贺你通过了电面! <br>\n        然后继续让你等下一步的通知. "]],[10,["The HR from {{ companyName }} informed you that they will not be moving forward with your application.<br>\n        But they really appreciate your interest with their company.","{{ companyName }}的HR发来邮件通知你电面没过, <br>\n        并很客气的感谢了你对他们公司的兴趣. "]],[11,["The HR from {{ companyName }} contacted with you about the onsite interview.<br>\n        The interview has been scheduled on the next month, no reschedule available.<br>\n        Meanwhile, due to cost cutting, the onsite interview has been changed to virtual onsite.","{{ companyName }}的HR发来关于下一步现场面试的邮件, <br>\n        时间是一个月之后, 不接受任何改期, <br>\n        并且由于该司降本增笑的原因, 现场面试将改为线上面试. "]],[12,["The HR from {{ companyName }} contacted with you about the onsite interview.<br>\n        Unfortunately, due to more than expected compatitive applicants this year,<br> \n        they decide not move forward with your case.<br>\n        They do, however, appreciate your interest with their company.","{{ companyName }}的HR发来关于下一步现场面试的邮件, <br>\n        很遗憾的通知你, 由于今年同学们都过于优秀, 我们的招聘指标提前用完了, <br>\n        所以你早点回家洗洗睡吧, 啊不是, 所以期待你明年再投我们公司. "]],[13,["You replied with confirmation of the virtual onsite.","你赶紧回复HR确认了现场面试(迫真)的安排"]],[14,["It's time for virtual onsite with {{ companyName }}. You joined the 5-round interview.<br>\n        With 1 round behavior and 4 rounds of coding.<br>\n        The HR emailed you that they will have the feedback and share with you in several days.","今天就是跟{{ companyName }}现场面试的日子, 你参加了5轮背靠背面试, <br>\n        一轮bq四轮coding的那种, <br>\n        HR事后发来邮件说TA会收集面试官的反馈, 然后过几天给你消息. "]],[15,["Congratulations, you did a great job in the onsite with {{ companyName }}!\n        However, the recruiter thought that an additional round is needed to help to make the decision.\n        The HR contacted you, asking if you want to schedule the additional round interview with them?","祝贺你, 你在 {{ companyName }} 的现场面试中表现得针不戳, <br>\n        不过呢, 从你的反馈来看需要加面, <br>\n        HR发来邮件, 询问你是否愿意再参加加面？"]],[16,["Your addtional interview with {{ companyName }} has been scheduled for the next month.<br>\n        You then asked their HR if there is any eariler slot available, they did not reply you.","和 {{ companyName }} 的加面被安排在了下个月, <br>\n        你又去信询问HR能否尽量提前, 然而并没有人回你. "]],[17,["You joined the addtional interview round with {{ companyName }}.<br>\n        The HR emailed you that it will take several days for the result.","今天你参加了 {{ companyName }} 的加面, <br>\n        HR发来邮件说几天之后出结果. "]],[18,["Congratulations! You passed the onsite interview of {{ companyName }} with flying colors!\n        The HR will email you the offical offer letter and onboarding packet in the next one or two business days.","祝贺你! 你通过了 {{ companyName }} 的面试! <br>\n        HR之后会给你发来正式的offer信和入职文档包, <br>\n        但是已经可以开香槟了! "]],[19,["Congratulations, you have finished the onsite interview with {{ companyName }}!<br>\n        However, after careful consideration, {{ companyName }} decide not move forward with your application.<br>\n        They do, however, appreciate your interest with them.","祝贺你, 你完成了 {{ companyName }} 的面试! <br>\n        在面试官同学们的谨慎考虑下, 我们不得不做出一个艰难的决定, 很遗憾的通知你, 你的面试没有通过. <br>\n        感谢你对我司的兴趣, 我们下次再见. "]],[20,["You worked on the internship project assigned by your mentor.<br>\n        {{ IF normalWork }}The project progress is on track.\n        {{ ELSE }}\n            {{ IF highWork }}The progress exceeded your expection.\n            {{ ELSE }}Due to various reasons, the progress is behind the expection.\n            {{ FI }}\n        {{ FI }}","你这半个月都在忙实习mentor给你分配的项目, <br>\n        {{ IF normalWork }}项目进展如期\n        {{ ELSE }}\n            {{ IF highWork }}项目进展顺利\n            {{ ELSE }}由于原粥碧少等原因, 项目进展不及预期……\n            {{ FI }}\n        {{ FI }}"]],[21,["You finished the internship phone interview with {{ companyName }}, HR told you to wait several days for the result.","{{ companyName }}的实习电面结束啦, HR发来邮件说几天后出结果. "]],[22,["Congratulations! The {{ companyName }} HR informed you that your internship interview has passed!","恭喜! {{ companyName }} 的HR发来邮件祝贺你通过了实习电面! "]],[23,["The HR from {{ companyName }} informed you that they will not be moving forward with your internship application.<br>\n        But they really appreciate your interest with {{ companyName }}.","{{ companyName }}的HR发来邮件通知你实习电面没过, <br>\n        并很客气的感谢了你对他们公司的兴趣. "]],[24,["Your summer internship ends near.<br>\n        Your mentor invites you to join the intern project demonstration meeting.\n        Where the people on the high table will determine if a return offer will be extended for you.","你的暑假实习即将结束, <br>\n        你的mentor邀请你参加实习生项目展示会, <br>\n        dalao们将会根据你在会上的表现来决定是否给你return offer. "]],[25,["You demonstrated your project in intern project demo meeting.<br>\n        {{ IF highWork }}Your team all presented to support you, they cheered on your accomplishment.<br>\n        You felt really grateful, and really hopes the company can give you return offer.<br>{{ FI }}\n        The HR contacted you later and said they will have the feedback in the following several weeks.","你在会上展示了你做的项目, <br>\n        {{ IF highWork }}你们组的同事们也都悉数到场为你喝彩, <br>\n        你有点感动, 衷心的希望能够拿到return offer{{ FI }}\n        HR之后发来邮件说会在几周内给你关于return offer的决定. "]],[26,["The stressful work, and probability other activities, have drained your vigor completely<br>\n        that you even missed the entire project demo meeting.<br>\n        {{ IF highWork }}Worrying about your sanity, your manager talked with you later, comforting you that don't worry about the return offer.<br>{{ FI }}\n        The HR contacted you later and said they will have the feedback in the following several weeks.","劳累的工作（以及可能的提瓦特和/或罗德岛的事务）已经使你心力憔悴, <br>\n        以至于你竟然没有参加实习生项目展示会! \n        {{ IF highWork }}你的老板担心你的身心状况, 安慰你先不要担心return offer的事情. <br>{{ FI }}\n        HR之后发来邮件说会在几周内给你关于return offer的决定. "]],[27,["Congratulations! The HR from {{ companyName }} contacted you that a return offer have been extended!","祝贺你! {{ companyName }}的HR给你发return offer啦! "]],[28,["The HR from {{ companyName }} contacted you that they will not move forward with your return offer with {{ companyName }}.","{{ companyName }}的HR发来邮件说你的return offer被取消了. "]],[29,["You received email from EECS department that they are going to hold a career fair this week!","今天你收到了计算机学院群发的邮件, 说学院将在这周举办这个学期的招聘会"]],[30,["You suited up and carries dozens of resume with you to join the career fair.\n        {{ IF goodPlace }}<br>As the school is next to numerous IT company offices,\n            {{ IF badSchool }} despite the school is trash, there are still plenty of recuiters presented.<br>\n            {{ ELSE }} the career fair is full of recuiters ready for hiring.<br>\n            {{ FI }}\n            You walked over countless boothes, talking with recuiters, and handed your resume to the them,<br>\n            expecting there will be interviews soon.\n        {{ ELSE }}<br>\n            {{ IF goodSchool }}Despite the school is famous,\n            {{ ELSE }}However, \n            {{ FI }}\n            not quite a lot of companies came, meanwhile a lot of them are not opening to international students.<br>\n            You went home dispointedly, with pile of resume that did not send out.\n        {{ FI }}","你换上一身正装拿着几打简历参加了招聘会, <br>\n        {{ IF goodPlace }}由于你校附近IT企业云集,\n            {{ IF badSchool }}即便你校只是个野鸡大学, 但是由于地理位置拔群, 仍有大群的HR参加了招聘会, <br>\n            {{ ELSE }}参加招聘会的HR十分甚至九分的多. <br>\n            {{ FI }}\n            你在各个公司摊位流连忘返, 对着HR们指点江山, 小礼物装满了三个手提袋, <br>\n            终于得意而归, 期待着面试滚滚而来. \n        {{ ELSE }}\n            {{ IF goodSchool }}即便你校享誉全球, \n            {{ ELSE }}然而,  \n            {{ FI }}\n            并没有什么HR愿意来参加你校的招聘会, 甚至这些来了的公司里大半也只招绿卡或者公民. <br>\n            你沮丧的回了家, 把剩下的几乎没怎么投出去的简历当草稿纸用了. \n        {{ FI }}"]],[31,["You decided not to join the career fair, which should be just a waste of time.<br>\n        {{ IF goodPlace }}However that is untrue, you saw your friends shared their experience on the career fair event,<br>\n        that how many opportunities they got, and some even got interview right afterwards.<br>\n        You start to regret on that bad decision, but this helps nothing.\n        {{ ELSE }}And yes your are correct, those went to that career fair got nothing but waste several valuable hours in their life.<br>\n        You got some good rest at home, watched animes and played GirlsFrontline, where the moe girls cured your heart.\n        {{ FI }}","你并不打算去参加招聘会, 参加这种垃圾活动不就是浪费青春么<br>\n        {{ IF goodPlace }}然而事实证明你失算了,不久之后你就看见了你同学们发的朋友圈, 招聘会现场盛况空前, <br>\n        面试机会唾手可得, 甚至有人因为跟HR尬聊愉快而直接拿了offer. <br>\n        你被破防了, 然而这也没什么卵用. \n        {{ ELSE }}事实证明你是对的, 来参加招聘会的HR们只是来公款旅游加带薪玩手机罢了, 那些做了十足准备去招聘会的同学成了纯纯的小丑. <br>\n        而你则在迦勒底度过了脸黑但充实的一天. \n        {{ FI }}"]],[32,["Your classmates invited you to join them group working on the current homework.","今天下课的时候你的同学问你要不要和他们一起写作业. "]],[33,["You accepted the invitation and joined the group study.<br>\n        With each of you worked on one part of the assignment, a 5-day dued assignment finished within a single night.<br>\n        You won several days free time for resting, and a nice grade on the assignment.","你答应了并参加了作业讨论, <br>\n        大家分工明确, 每人找作业其中几道题的答案. 很快这个要做五天的作业一晚上就被你们整完了. <br>\n        你很高兴的摸了四天鱼, 作业交上去也拿了高分. "]],[34,["You rejected your classmates' invitation as you noticed that they only want to copy your finished assignments.<br>\n        But your relationship with them, however, has been inevitablely demaged.","你回绝了你同学的邀请, 这帮人不过就是想让你输出罢了, <br>\n        然后你不出所料的被全体中国留学生疏远了. "]],[35,["You are not familiar with those classmates, and thus rejected their invitation.<br>\n        Your relationship with them, alas, has been inevitablely demaged.","你回绝了你同学的邀请, 因为你跟他们不熟, <br>\n        然而这样你也就跟他们永远混不熟了. "]],[36,["While you are working on the assignment,<br>\n        you find the one the Google result is exactly the question you are working on.<br>\n        Clicking into the webpage, you found the answer of the question, you decided to...","今天当你在网上搜索作业相关的资料时, <br>\n        你发现了cheeg上有跟你的作业题一模一样的题目, <br>\n        在开了7天免费会员之后你看到了答案, 你决定……"]],[37,["You submitted the assignment with multiple answers copied from the internet.<br>\n        {{ IF cheatSuccess }}Nothing happened, your assignment got high grade.\n        {{ ELSE }}Serveral days later, you received an email from TA also cc-ed the professor,<br>\n        which was wondering why your solution was almost the same with one of the solution exists on the internet.<br>\n            {{ IF highStudy }}You explained to TA and showed them how to derive the result,<br>\n            they seemed convinced by your explanation. However, that was a quite scary experience.\n            {{ ELSE }}\n                {{ IF caughtCheat }}This is not the first time TA caught your cheating. And they have already warned you.<br>\n                So this time TA directly reported to the dean's office, the professor was supporting the TA.\n                {{ ELSE }}Your explanation was feeble as you cannot give the correct answer when the question was slightly changed.<br>\n                The TA therefore gave you zero on this assignment and warned you if this happens ever again they will report to the dean's office.\n                {{ FI }}\n            {{ FI }}\n        {{ FI }}","你照抄了你找到的答案后交了作业, <br>\n        {{ IF cheatSuccess }}无事发生, 作业拿了高分. \n        {{ ELSE }}然而几天之后, 你收到助教发来并抄送教授的邮件, 列出了你抄答案的网站链接, 并质疑你的作业跟网上的答案为何出奇的相似. <br>\n            {{ IF highStudy }}你早有准备, 找到助教并且现场演示了如何推出那些答案, <br>\n            由于找不出破绽, 助教被迫相信了你的说辞. <br>\n            不过这也是够吓人的了. \n            {{ ELSE }}\n                {{ IF caughtCheat }}这已经不是助教第一次抓到你作弊了, 他直接通报了学院, 随后教授也支持助教的通报.\n                {{ ELSE }}你那骗智障一样的说辞加深了助教的怀疑, 他跟你约了线下答疑时间让你澄清, 结果题目改个参数你就看不出来了, <br>\n                助教欣喜若狂的给了你作业零分, 并警告你如果再被发现抄作业答案, 他就去上报学院了. \n                {{ FI }}\n            {{ FI }}\n        {{ FI }}"]],[38,["During the presentation of one of the class this week, your teammate seems under prepared.<br>\n        {{ IF highStudy }}Thanks your extra preparation, you carried the their part and saved your team's presentation.<br>\n        The professor gave you extra credit as your performance exceeded the expectation.\n        {{ ELSE }}Though you did your part, the final score is still very low.<br>\n        You felt desprately helpless, seeing your effort ruined by the mistake of somebody else.\n        {{ FI }}","在这周轮到你们组讲PPT的时候, 你的队友毫无准备, 发言宛如智障<br>\n        {{ IF highStudy }}幸亏你平时学习勤奋, 可以把本来属于你队友讲的内容也勉强讲明白. <br>\n        教授给你额外加了分数来奖励你的救场. \n        {{ ELSE }}所以尽管你讲的部分中规中矩, 但是最后的得分依旧很低. <br>\n        你心里问候了这个损人不利己的智障东西全家, 然而这并没有什么乱用. \n        {{ FI }}"]],[39,["For various reasons, you did not prepared for an upcoming team presentation in this week.<br>\n        During your part in the presentation, you several times lost topic and your talking was disorganized.<br>\n        The presentation score was therefore pretty miserable...<br>\n        Your teammate yelled at you after class, you felt very bad as well.","由于在召唤师峡谷、海拉鲁、博德之门等地的事务繁忙, 你没来得及准备这周课上轮到你们组讲的PPT. <br>\n        所以轮到你讲的时候, 你的表演内容支离破碎, 令教室内外都充满了快活的空气. <br>\n        教授不出意外的因为过于高兴给了你们组最低分. <br>\n        你的队友们下课阴阳了你两句后跟你不欢而散, 你也感觉有点对不起他们的辛苦准备. "]],[40,["After finished a large project assignment, you packed up the files and submitted the assignment.<br>\n        However, after a few days you saw the assignment grade is 0.<br>\n        You then found that you only packed up some useless output file instead of the code carelessly.<br>\n        In despair, you came to the professor's office and try to explain.<br>\n        {{ IF highStudy }}Fortunately, as you were pretty familiar with the professor, the professor comforted you <br>\n        and give you a second chance to re-submit your work.<br>\n        You did not mess it up this time and the corrected grade is as high as it should be.<br>\n        Though the accident ended up with narrow escape, you still emotionally damaged a bit.\n        {{ ELSE }}The professor first had a bit difficulty remember who you are.<br>\n        And then told you that all submissions are final, they can help nothing on this.<br>\n        And, nonetheless, hope you can do better in the next assignment.\n        {{ FI }}","你终于完成了大作业, 并赶在截止时间前打包上传了它. <br>\n        然而几天后你惊讶的发现成绩居然是零分, <br>\n        你看了助教批语, 自己居然打包错文件了, 代码文件一个都没交上去. <br>\n        你人麻了, 赶紧去找教授问问还有没有救. <br>\n        {{ IF highStudy }}幸亏你平时学习勤奋, 答疑每回都去, 教授认出你来, 给了你一个重新提交的机会. <br>\n        你叩谢隆恩之后马上上机重新上传, 顺手还参照(出分后助教给的)范例代码改了几处bug. <br>\n        改分之后你的作业成绩也是如你所愿的高. <br>\n        虽然虚惊一场, 但是你今天还是承受了成吨的精神伤害. \n        {{ ELSE }}教授不为所动, 强调出分后的分数就改不了了, 与其在这浪费时间还不如吸取教训, 好好准备下次的作业. <br>\n        你心里认真的替教授反思了一下他的木琴为什么要把他生下来, 但现在看起来除了无能狂怒也没有别的办法了.\n        {{ FI }}"]],[41,["You were invited to join a party with classmates.<br>\n        {{ IF nerd }}As you are a nerd and have no close friends,<br>\n        Those classmates were just hanging around like you are invisible.<br>\n        You spent an awful night listening to their bullshit and getting cold shoulder.\n        {{ ELSE }}\n            {{ IF social }}As you are known as a social person, you joined the party without hesitence.<br>\n            And had a good time in cheers and laugher,<br>\n            really hopes that the party could be all day long.\n            {{ ELSE }}You accepted the event for better food and good relaxing vibe.\n            {{ FI }}\n        {{ FI }}","你的同学拉你去一个周末的饭局, <br>\n        {{ IF nerd }}然而你周末到场之后发现不认识几个人, 社牛们在各自早就形成的小团体里各玩各的, <br>\n        除了散场前找你摊钱, 整场party没有人主动找你搭话. <br>\n        虽然没指望在这次party上散心, 但你的精神状态反而更差了. \n        {{ ELSE }}\n            {{ IF social }}这种事怎么可能少了你呢. 社牛的你就是party的中心, 一天天的刷题和找工, 我们就不能回归小留初心么. <br>\n            酣畅淋漓的玩了一宿之后, 你的精神状态反而更好了. \n            {{ ELSE }}你跟着去了, party上社牛在装逼, 但是跟你有什么关系呢, 还是多吃点贵的好吃的东西吧家人们. \n            {{ FI }}\n        {{ FI }}"]],[42,["{{ IF inSemester }}After a hardworking day,{{ FI }}\n        {{ IF inWork }}After a stressful day of intern working,{{ FI }}\n        {{ IF inRest }}Just a normal vecation day{{ FI }}\n        you went to bed after scrolled smart phone for almost an hour<br>\n        You then found your mind is incredibly consious and every brain cell refused to go to sleep.<br>\n        You stayed awake till morning twilight shined in.<br>\n        You felt both physically and emotionally damaged. \n        {{ IF inSemester }}Yet you have to get up and go to school.{{ FI }}\n        {{ IF inWork }}Yet you have to get up and go to work.{{ FI }}\n        {{ IF inRest }}Fortunately, you can have some extra rest time as you are in an ideling vecation.{{ FI }}","{{ IF inSemester }}在一天辛勤的学习结束后, {{ FI }}\n        {{ IF inWork }}在一天辛苦的实习结束后, {{ FI }}\n        {{ IF inRest }}一个平平无奇摸鱼的日子, {{ FI }}\n        你在睡觉前不小心划了一个多小时的手机, 然后你就发现无论如何你都睡不着了.<br>\n        你绝望的清醒到第二天清晨, 身心憔悴<br> \n        {{ IF inSemester }}然而这天居然还有早八课.{{ FI }}\n        {{ IF inWork }}然而你今天早上还要跟mentor 1:1汇报进度.{{ FI }}\n        {{ IF inRest }}不过问题不大, 摸鱼中的你早上成功睡了下来, 下午才起.{{ FI }}"]],[43,["You decided to eat outside in a nearby Chinese restaurant today, instead of cooking at home.<br>\n        {{ IF eatGood }}The food was nice and you had an enjoyful meal.\n        {{ ELSE }}The taste of food was trash and seemed even unwashed before cooking.<br>\n        You got sick shortly after you went home. \n        {{ FI }}","你决定今天不做饭了去附近的中餐馆吃,<br>\n        {{ IF eatGood }}餐馆做的菜好吃便宜, 满足了你的中国胃的渴求. \n        {{ ELSE }}很不幸这家餐馆的大师傅是个被裁的程序员, 这菜里居然有bug, <br>\n        你被恶心的回家后一两天吃不下饭.\n        {{ FI }}"]],[44,["Today when you are working, the small chat between two your teammates attracted you.<br>\n        You joined and heared a bunch of gossip of the org.<br>\n        They told you this org is brutal and harsh.<br>\n        You was not paying too much attention, until two days later your manager told your team that<br>\n        one of your teammates small talking at that time was pipped.<br>\n        Though you felt that teammate deserves it as he do not work that much, you were still frightened.","今天你正在干活时, 被旁边两个同事的闲聊吸引了. <br>\n        你决定释放天性, 加入吃瓜. <br>\n        他们毫不避讳的跟你吐槽这个组有多坑多累, 老板还吵不过别人只能背名额. <br>\n        你最开始并没有太在意这些, 直到两天之后其中一个同事被PIP了. <br>\n        虽然你觉得他罪有应得, 毕竟他经常摸鱼, 但是你仍然被这职场的残酷震撼到了."]],[45,["Public holiday is coming and far less people came to office this week.<br>\n        You thought this could be a good chance to develop your devlopment skills.<br>\n        You decided to ask your mentor to give you some database script to start to play with.","这周有个公共假日, 来公司上班的人明显少了很多, 你也有点闲了. <br>\n        你想借此机会来在实习项目之外拓展一下个人能力, 以便今后面试吹逼. <br>\n        于是你找你的mentor要了个运维用的数据库脚本来跑着玩."]],[46,["The script is basically select all records in table and delete them.<br>\n        Except the table is a prodcution table.<br>\n        You managed to get sufficient permission to execute the script without look into it.<br>\n        The script executed successfully, and the production environment crashed immediately afterwards.<br>\n        SEV 1 declared, LSE declared shortly after, millions of dollars burt during this servive unavailable time.<br>\n        You were shocked at the destruction you made, thought you will be fired.<br>\n        While your manager did not do so,<br>\n        she just comforted you and said this indicates loopholes in our system we needs to fix, we just found it in a difficult way<br>\n        You felt much relieved, however parts of you still think that this accident will not leave you without hurting you.","这个脚本本质上来说是删除一个表里的全部记录, 本身并没有什么问题. <br>\n        除了表名是个刚上线的新生产环境的数据库, <br>\n        你设法解决了你遇到的权限不足的问题, 志得意满的执行了脚本. <br>\n        脚本执行的很成功, 那个库被删干净了. <br>\n        然后你就听到了办公室里的pager一个接一个的响了起来, 聊天室里炸了锅, 几十个工程师被拉进war room紧急应对这个重大生产事故. <br>\n        事后的COE报告表明你造成了百万美元级别的损失.<br>\n        你以为你会被立即开除, 然而你的老板安慰你说真正的责任不在你, 而在于我们的权限系统的不完善, 我们只是以一种不愉快的方式发现了它. <br>\n        你感觉好了很多, 然而你任然隐隐觉得这个事故的锅不会就这么离你而去."]],[47,["You joined the weekly coding contest of letscode in this week.<br>\n        {{ IF goodRank }}You crushed the problems and got a good rank.\n        {{ ELSE }}You have no idea to those problems and got a poor rank\n        {{ FI }}","你参加了这周的 力抠 的周赛. <br>\n        {{ IF goodRank }}你技压群雄, raing又涨了.\n        {{ ELSE }}然而你太菜了, raing又掉了.\n        {{ FI }}"]],[48,["You got the email notification about the grade released on your last homework assigment.<br>\n        {{ IF goodGrade }}Your last submission was perfect and got a good grade.\n        {{ ELSE }}\n            {{ IF badGrade }}Your last submission is chaos and got a bad grade.\n            {{ ELSE }}Your last submission was good, and got a average grade.\n            {{ FI }}\n        {{ FI }}","你收到助教发的邮件, 前几天交的作业出分了. <br>\n        {{ IF goodGrade }}你那次交的作业基本全对, 拿了高分.\n        {{ ELSE }}\n            {{ IF badGrade }}你那次交的作业狗屁不通, 拿了低分.\n            {{ ELSE }}你那次交的作业不好不坏, 比平均分高些.\n            {{ FI }}\n        {{ FI }}"]],[100,["It's time! You decide to apply for CS Master's program in US!","是时候了! 你决定申请美研CS项目!"]],[101,["One of your application has been admitted and you decide to accept the offer!","你收到了几份offer, 一番挑选后你决定接受其中之一!"]],[200,["Congratulations! You graduated from school with dipolma (somewhat unimportant) <br>\n        AND a shiney accepted offer letter from an IT company!<br>\n        Your OPT application has been approved, bon voyage on your new jouney!","祝贺你! 你顺利的完成了贵校的美研CS项目(这并不重要)<br>\n        并且成功的拿到了全职软件开发工程师的offer!<br>\n        你的OPT申请已经通过, 祝你一路顺风!"]],[500,["You decide not to proceed MSCS in US.","思前想后, 你决定还是留在国内吧."]],[501,["You cannot suffer the life in here anymore, both mentally and physcially. <br>\n        You decide to go back home and never come back.","你觉得在这的每一天都是身心不可承受之折磨, <br>\n        你决定放弃美研CS项目, 逃回国内, 永远不再回到美国这个地狱了."]],[502,["Despite you might hard work, your grade is belowing the bar<br>\n        and the school decide to drop you off the Master's program.<br>\n        Your visa expired and you have to go back home.","尽管你觉得你认真努力的学习了, 你的绩点仍然低于学院的要求,<br>\n        校方决定将你退学.<br>\n        你的F1身份也因此没了, 只得收拾东西回国."]],[503,["Despite you might hard work.<br>\n        For various reasons, you still have no offer until the OPT grace period ends.<br>\n        Your visa expired and you have to go back home.","尽管你顺利毕业, 也自以为认真努力的刷题找工了.<br>\n        可直到你用完OPT失业期你也没有拿到一个offer,<br>\n        你失去了居留美国的合法身份, 只得收拾东西回国."]],[504,["Despite you repeatedly explain to the school how important your other thing is<br>\n        compared to the exam, they still dropped you as absence in final is an instant F.<br>\n        Those stubborn bureaucrat ruined your vacation as well as your dream as an MSCS student.<br>\n        You posted long and colorful post accuse this school in LitterRatBook and 1Point4Acres.<br>\n        But it cannot help you from being revoked from student visa and forced to go back home.","尽管你向学校努力解释自已因其他重要原因而未能来参加期末,<br>\n        但学院依旧以你缺考为由给了你一个F, 并因此将你开除,<br>\n        这群脑满肠肥的官僚主义屌丝肯定是嫉妒你那缤纷多彩的校外生活才如此妨害你的美研CS项目.<br>\n        你在如小薨书和一亩三坟地等平台上大发小作文痛批这个无良学校<br>\n        虽然你涨粉不少, 还接了商单, 但这改变不了你痛失F1身份只得收拾东西回国的现实."]],[505,["The dean's office responded to TA's report in an incredibly fast manner.<br>\n        After fast desipite formally investigation, your plagiarism was verdicted.<br>\n        According to the rule of the collage, your are hereby forced dropped from the MSCS program.","学院以令人惊叹的高效处理了你的抄袭问题, 他们迅速而正式的展开了调查, 并裁定你的抄袭违反学院规定,<br>\n        你因此被开除出了该校的MSCS学院, 你的美研CS旅程也因此告一段落了.<br>\n        你在如小薨书和一亩三坟地等平台上大发小作文痛批这个无良学校<br>\n        虽然你涨粉不少, 还接了商单, 但这改变不了你痛失F1身份只得收拾东西回国的现实."]]])},"./src/Event/Static/OptionTexts.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OPTION_TEXT_MAP=void 0,t.OPTION_TEXT_MAP=new Map([[0,[[1,"Study","学习"],[2,"Send resume","投简历"],[3,"Practice coding","刷题"],[4,"Slack off","摸鱼"],[20,"Working on intern project","做实习项目"]]],[1,[[308,"Good study day day up","我爱学习"]]],[2,[[308,"Cool","好吧"]]],[3,[[308,"My effort will not be in vain","我的努力不会白费的"]]],[4,[[308,"Wonderful","蛤蛤蛤蛤"]]],[5,[[6,"Take the exam","去参加考试"],[504,"Nah it conflict with my flight schedule","赶飞机回国要紧, 家人见一面少一面了"]]],[6,[[308,"Let's take a break!","放假了! "]]],[7,[[8,"Reply yes immidiately!","立刻回HR邮件! 我可太有空了"],[21,"Replay yes immidiately!","立刻回HR邮件! 我可太有空了"],[307,"Nope, not ready yet","很忙, 没空"]]],[8,[[308,"Finger crossed..","忐忑不安……"]]],[9,[[307,"Fantastic!","太棒了!"]]],[10,[[307,"How unfortunate..","这合理吗"]]],[11,[[13,"Accept the arrangement","接受HR的安排"],[307,"Conflict with KanColle seasonal event, don't have time, really","砍口垒活动捞船呢, 没空"]]],[12,[[307,"What the hell..","HR你的良心不会卵痛么"]]],[13,[[307,"Finger crossed","忐忑不安……"]]],[14,[[307,"Finger crossed","忐忑不安……"]]],[15,[[16,"Gladly! Let's schedule it ASAP!","非常愿意, 快点安排罢"],[307,"Hell no! I have had enough!","不加, 滚"]]],[16,[[307,"Got it.","HR怎么都死了"]]],[17,[[307,"Finger crossed","忐忑不安……"]]],[18,[[307,"WHAT A MIGHTY TRIUMPH!","我!可!真!太!厉!害!了!!!"]]],[19,[[307,"How unfortunate...","啊?"]]],[20,[[308,"{{ IF normalWork }}Cool{{ ELSE }}{{ IF highWork }}Yeah{{ ELSE }}Feel bad{{ FI }}{{ FI }}","{{ IF normalWork }}好吧{{ ELSE }}{{ IF highWork }}我真牛逼{{ ELSE }}这破项目怎么这么麻烦{{ FI }}{{ FI }}"]]],[21,[[308,"Cool","好吧"]]],[22,[[307,"Fantastic!","太棒了!"]]],[23,[[307,"How unfortunate..","这合理吗"]]],[24,[[25,"Join and demonstrate","带着制作精良的PPT参加"],[26,"Oops I get up late..","诶卧槽睡过了!"]]],[25,[[308,"Hope there will be good news","但愿是好事"]]],[26,[[308,"Hope there will be good news","但愿是好事罢"]]],[27,[[307,"MY HARDWORK PAID OFF!!","我!要!有!工!作!了!!!"]]],[28,[[307,"How unfortunate..","啊?"]]],[29,[[30,"Suit up and join","换上正装参加"],[31,"You know these companies are not mean to hire in this career fair right?","凑这个热闹干嘛? 哪个正经公司在招聘会上招聘啊"]]],[30,[[307,"{{ IF goodPlace }}Awesome{{ ELSE }}Waste of time{{ FI }}","{{ IF goodPlace }}大开眼界{{ ELSE }}垃圾活动, 毁我青春{{ FI }}"]]],[31,[[307,"{{ IF goodPlace }}That is a big mistake{{ ELSE }}Cozy{{ FI }}","{{ IF goodPlace }}失算了……{{ ELSE }}玛修最棒了!{{ FI }}"]]],[32,[[33,"Here I come","来了来了"],[34,"You guys just want me to carry huh?","想抱大腿直说"],[35,"I'm so nervrous, I just want to stay at home","我突然尿急我能先回家么……"]]],[33,[[307,"Nice!","人多力量大!"]]],[34,[[307,"Who cares","我也没想搭理他们啊"]]],[35,[[307,"Why they become so indifferent..","怎么没人找我搭话了……"]]],[36,[[37,"Copy it down, free credit!","开抄"],[307,"What if TA also knows this webpage..?","这网站我知道助教就不知道?"]]],[37,[[307,"{{ IF cheatSuccess }}Easy credit!\n                {{ ELSE }}\n                    {{ IF highStudy }}I do not want to experience this ever again...\n                    {{ ELSE }}How unfortunate...\n                    {{ FI }}\n                {{ FI }}","{{ IF cheatSuccess }}这以后不用愁作业了啊\n                {{ ELSE }}\n                    {{ IF highStudy }}我被吓得心脏病都要犯了……\n                    {{ ELSE }}至于么……这学校也不是你家开的啊\n                    {{ FI }}\n                {{ FI }}"]]],[38,[[307,"{{ IF highStudy }}Easy day!{{ ELSE }}How did that crap got admitted?{{ FI }}","{{ IF highStudy }}大腿就是用来抱的!{{ ELSE }}这种垃圾是怎么被录取的?{{ FI }}"]]],[39,[[307,"Let's don't messed up any presentation afterwards","下次好好准备吧……"]]],[40,[[307,"{{ IF highStudy }}My heart cannot endure this once more..{{ ELSE }}How unfortunate..{{ FI }}","{{ IF highStudy }}我的小心脏可不能再承受这种打击了……{{ ELSE }}教授你家户口本就一页么{{ FI }}"]]],[41,[[307,"{{ IF nerd }}Should stayed at home watching anime..{{ ELSE }}What a party!{{ FI }}","{{ IF nerd }}不如在家{{ ELSE }}以后常约!{{ FI }}"]]],[42,[[307,"How unfortunate..","感觉要死"]]],[43,[[307,"{{ IF eatGood }}Nice meal!{{ ELSE }}Will never come back again..{{ FI }}","{{ IF eatGood }}家乡的味道!{{ ELSE }}以后再也不来了{{ FI }}"]]],[44,[[307,"Oh my god hope this thing will never happen on me..","希望这种事以后不会发生在我身上……"]]],[45,[[46,"Go ahead and execute the script","执行脚本"],[307,"Nah just go home and slack","回家摸鱼算了"]]],[46,[[307,"If only I did not blindly do this..","这mentor是想坑死我么"]]],[47,[[307,"{{ IF goodRank }}Nicely done{{ ELSE }}I will definitely do better next time{{ FI }}","{{ IF goodRank }}做的不错{{ ELSE }}下次努力{{ FI }}"]]],[48,[[307,"{{ IF goodGrade }}Nicely done\n                {{ ELSE }}\n                    {{ IF badGrade }}Should do it better next time..\n                    {{ ELSE }}Cool\n                    {{ FI }}\n                {{ FI }}","{{ IF goodGrade }}天道酬勤\n                {{ ELSE }}\n                    {{ IF badGrade }}下次不能再这样了……\n                    {{ ELSE }}扎不多得勒\n                    {{ FI }}\n                {{ FI }}"]]],[100,[[101,"Excited!","你们搞得这些申请啊, excited!"],[500,"Nonsense, I won't leave my beloved motherland","我和我的祖国一刻也不能分割"]]],[101,[[308,"Cool","这个学校的项目啊, excited!"]]],[200,[[100,"Start a new MSCS emulator journey","开始新一轮游戏"]]],[500,[[100,"Start a new MSCS emulator journey","开始新一轮游戏"]]],[501,[[100,"Start a new MSCS emulator journey","开始新一轮游戏"]]],[502,[[100,"Start a new MSCS emulator journey","开始新一轮游戏"]]],[503,[[100,"Start a new MSCS emulator journey","开始新一轮游戏"]]],[504,[[100,"Start a new MSCS emulator journey","开始新一轮游戏"]]],[505,[[100,"Start a new MSCS emulator journey","开始新一轮游戏"]]]])},"./src/Game/GameManager.ts":(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.GameManager=t.DEBUG_FLAG=void 0;const r=n("./src/Game/RoundManager.ts");t.DEBUG_FLAG=!1;t.GameManager=class{constructor(){this._roundManager=new r.RoundManager}async gameRun(){for(;;)await this._roundManager.oneRound()}}},"./src/Game/LanguageFlag.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.LanguageFlag=void 0;t.LanguageFlag=class{constructor(e=!0){this._lang=e}get lang(){return this._lang}set lang(e){this._lang=e}}},"./src/Game/RoundConstants.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OPTGP_START_ROUND=t.SUMMER_I_ROUNDS=t.END_ROUND=t.GAME_START_ROUND=t.COMPULSORY_EVENT_ROUNDS=void 0,t.COMPULSORY_EVENT_ROUNDS=[6,15,30,39],t.GAME_START_ROUND=-1,t.END_ROUND=47,t.SUMMER_I_ROUNDS=[16,17,18,19,20,21,22,23],t.OPTGP_START_ROUND=40},"./src/Game/RoundManager.ts":(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.RoundManager=t.RoundPhases=void 0;const r=n("./src/Event/EventManager.ts"),a=n("./src/Ui/UiManager.ts"),i=n("./src/Player/Player.ts"),o=n("./src/Game/RoundConstants.ts"),s=n("./src/Event/EventConstants.ts"),u=n("./src/Utils/Rng.ts"),l=n("./src/Utils/UtilFns.ts");var d;!function(e){e[e.INVALID=0]="INVALID",e[e.GAME_START_PHASE=1]="GAME_START_PHASE",e[e.RESULT_EVENT_PHASE=2]="RESULT_EVENT_PHASE",e[e.NORMAL_EVENT_PHASE=3]="NORMAL_EVENT_PHASE",e[e.COMPULSORY_EVENT_PHASE=4]="COMPULSORY_EVENT_PHASE",e[e.JOBHUNTING_EVENT_PHASE=5]="JOBHUNTING_EVENT_PHASE",e[e.RANDOM_EVENT_PHASE=6]="RANDOM_EVENT_PHASE"}(d||(t.RoundPhases=d={}));t.RoundManager=class{constructor(){this._currentPhase=d.INVALID,this._currentEventId=0,this._suspendedCurrentEventId=-1,this._randomEventNum=0,this._ui=new a.UiManager,this._eventManager=new r.EventManager,this._player=new i.Player,this.reset()}reset(e=null,t=s.GAME_START_EVENT_ID){this._currentEventId=t,this._suspendedCurrentEventId=-1,null!=e?this._player=e:this._player.reset(),this._ui.reset()}async oneRound(e=null){for(this._ui.printTime(this._player.round),this._eventManager.resetUsedRandomEvent(),this._randomEventNum=(0,u.getRandomInt)(4),this._currentPhase=null==e?this.setupInitialPhase():e,(0,l.DebugLogger)("Round "+this._player.round+", phase "+this._currentPhase+" event id:"+this._currentEventId);this._currentPhase!=d.INVALID&&0==this._player.status;)switch(this._currentPhase){case d.COMPULSORY_EVENT_PHASE:await this.phaseCompulsoryEvent();break;case d.RANDOM_EVENT_PHASE:await this.phaseRandomEvent();break;case d.RESULT_EVENT_PHASE:await this.phaseResultEvent();break;case d.NORMAL_EVENT_PHASE:await this.phaseNormalEvent();break;case d.GAME_START_PHASE:await this.phaseGameStartEvent();break;case d.JOBHUNTING_EVENT_PHASE:await this.phaseJobhuntingEvent()}(0,l.DebugLogger)("Exit phase transition loop."),0!=this._player.status||Array.from(s.GAME_OVER_EVENTS_MAP.values()).includes(this._currentEventId)?(await this.phaseGameEndEvent(),this.reset(),(0,l.DebugLogger)("Restart the game")):this._player.round+=1,(0,l.DebugLogger)("exit one round")}setupInitialPhase(){return this._player.round==o.GAME_START_ROUND?d.GAME_START_PHASE:0!=this._player.roundResultEventQueue.length&&this._player.roundResultEventQueue[0][0]<=this._player.round?(this._suspendedCurrentEventId=this._currentEventId,this._currentEventId=s.IN_PHASE_END_EVENT_ID,d.RESULT_EVENT_PHASE):o.COMPULSORY_EVENT_ROUNDS.includes(this._player.round)||o.SUMMER_I_ROUNDS[o.SUMMER_I_ROUNDS.length-1]==this._player.round&&this._player.attributeIds.includes(11)?d.COMPULSORY_EVENT_PHASE:(this._player.attributeIds.includes(5)&&this._ui.printSuTheme(),this._currentEventId=s.NORMAL_EVENT_ID,d.NORMAL_EVENT_PHASE)}async phaseResultEvent(){(0,l.DebugLogger)("phase result, round "+this._player.round);let e=d.NORMAL_EVENT_PHASE;o.COMPULSORY_EVENT_ROUNDS.includes(this._player.round)&&(e=d.COMPULSORY_EVENT_PHASE),o.SUMMER_I_ROUNDS[o.SUMMER_I_ROUNDS.length-1]==this._player.round&&this._player.attributeIds.includes(11)&&(e=d.COMPULSORY_EVENT_PHASE);let t=null;if(this._currentEventId==s.IN_PHASE_END_EVENT_ID){if(!(this._player.roundResultEventQueue.length>0&&this._player.roundResultEventQueue[0][0]<=this._player.round))return this._currentEventId=s.PHASE_END_EVENT_ID,void this.phaseTransition(e,this._suspendedCurrentEventId);{let e=this._player.roundResultEventQueue.shift();(0,l.DebugLogger)("Round "+this._player.round+"event info are "+e),this._currentEventId=e[1],t=-1==e[2]?null:e[2]}}await this.eventTransition(t),this.phaseTransition(e,this._suspendedCurrentEventId)}async phaseCompulsoryEvent(){(0,l.DebugLogger)("phase compulsory, round "+this._player.round),s.COMPULSORY_EVENT_IDS.includes(this._currentEventId)||(o.COMPULSORY_EVENT_ROUNDS.includes(this._player.round)?this._currentEventId=s.FINAL_TEST_START_EVENT_ID:this._currentEventId=s.RETURN_OFFER_EVAL_START_EVENT_ID),await this.eventTransition(),this.phaseTransition(d.INVALID,s.NORMAL_EVENT_ID)}async phaseJobhuntingEvent(){if((0,l.DebugLogger)("phase job hunting, round "+this._player.round),this._currentEventId==s.IN_PHASE_END_EVENT_ID){let e=(0,u.getRandomInt)(100);(0,l.DebugLogger)(e+" and "+this._player.parameter.interviewProbability);let t=e<this._player.parameter.interviewProbability;this._currentEventId=t?s.JOBHUNTING_EVENT_ID:s.PHASE_END_EVENT_ID}this._currentEventId!=s.PHASE_END_EVENT_ID&&await this.eventTransition(),this.phaseTransition(d.RANDOM_EVENT_PHASE,s.IN_PHASE_END_EVENT_ID)}async phaseRandomEvent(){if((0,l.DebugLogger)("phase random1, round"+this._player.round),this._randomEventNum>0&&this._currentEventId==s.IN_PHASE_END_EVENT_ID){let e=this._eventManager.getNextRandomEvent(this._player);this._currentEventId=-1==e?s.PHASE_END_EVENT_ID:e,this._randomEventNum-=1}else this._randomEventNum<=0&&this._currentEventId==s.IN_PHASE_END_EVENT_ID&&(this._currentEventId=s.PHASE_END_EVENT_ID);this._currentEventId!=s.PHASE_END_EVENT_ID&&await this.eventTransition(),this.phaseTransition(d.INVALID,s.NORMAL_EVENT_ID)}async phaseNormalEvent(){(0,l.DebugLogger)("phase normal, round"+this._player.round),await this.eventTransition(),this.phaseTransition(d.JOBHUNTING_EVENT_PHASE,s.IN_PHASE_END_EVENT_ID)}async phaseGameStartEvent(){(0,l.DebugLogger)("phase game start, round"+this._player.round),await this.eventTransition(),this.phaseTransition(d.INVALID,s.NORMAL_EVENT_ID)}async phaseGameEndEvent(){(0,l.DebugLogger)("phase game end, round"+this._player.round),await this.eventTransition()}async eventTransition(e=null){let t=this._eventManager.executeEvent(this._currentEventId,this._player,e);[100,500].includes(this._currentEventId)||(this._ui.printParameter(this._player.parameter),this._ui.printAttributes(this._player.attributeStrings)),this._player.attributeIds.length&&this._ui.printAttributeModal(this._player.attributeIds);let n=await this._ui.printAndSetupEvent(t[0],t[1]);this._currentEventId=n}phaseTransition(e,t){(0,l.DebugLogger)("phase transition: "+this._currentPhase+" to "+e+", displaying event id: "+this._currentEventId),0!=this._player.status?((0,l.DebugLogger)("case 1"),this._currentEventId=s.GAME_OVER_EVENTS_MAP.get(this._player.status),this._currentPhase=d.INVALID):Array.from(s.GAME_OVER_EVENTS_MAP.values()).includes(this._currentEventId)?((0,l.DebugLogger)("case 1.1"),this._currentPhase=d.INVALID):this._currentEventId==s.PHASE_END_EVENT_ID?((0,l.DebugLogger)("case 2"),this._currentEventId=t,this._currentPhase=e):(0,l.DebugLogger)("case 3")}}},"./src/Player/NameHelper.ts":(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.NameHelper=void 0;const r=n("./src/Utils/Rng.ts"),a=n("./src/Utils/UtilFns.ts");t.NameHelper=class{constructor(e){this._names=[],this._staticNames=e,this._usedNameMap=new Map}reset(){this._names=this._staticNames}getNextName(e){if(0==this._names.length)return e;let t=this._names[(0,r.getRandomInt)(this._names.length)];return this._names=this._names.filter((e=>e!=t)),t}registerName(e,t){this._names.includes(t)&&(this._names=this._names.filter((e=>e!=t))),this._usedNameMap.set(e,t)}retrieveName(e){return this._usedNameMap.has(e)?this._usedNameMap.get(e):((0,a.DebugLogger)("Name not exist for id "+e),"")}}},"./src/Player/Parameter.ts":(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Parameter=void 0;const r=n("./src/Player/PlayerConstants.ts");t.Parameter=class{get study(){return this._study}set study(e){this._study=Math.min(e,r.MAX_STUDY)}get coding(){return this._coding}set coding(e){this._coding=Math.min(e,r.MAX_CODING)}get health(){return this._health}set health(e){this._health=Math.min(e,r.MAX_HEALTH)}get working(){return this._working}set working(e){this._working=Math.min(e,r.MAX_WORKING)}get interviewProbability(){return this._interviewProbability}set interviewProbability(e){this._interviewProbability=Math.min(e,r.MAX_INTERVIEW_PROBABILITY)}get scores(){return this._scores}set scores(e){this._scores=e}constructor(e=r.INITIAL_STUDY_VALUE,t=r.INITIAL_CODING_VALUE,n=r.INITIAL_HEALTH_VALUE,a=0,i=0,o=[]){this._study=e,this._coding=t,this._health=n,this._working=a,this._interviewProbability=i,this._scores=o}}},"./src/Player/Player.ts":(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Player=void 0;const r=n("./src/Attribute/AttributeManager.ts"),a=n("./src/Game/RoundConstants.ts"),i=n("./src/Player/Parameter.ts"),o=n("./src/Player/NameHelper.ts"),s=n("./src/Player/Static/CourseNameTexts.ts"),u=n("./src/Player/Static/CompanyNameTexts.ts"),l=n("./src/Attribute/Static/AttributeTexts.ts"),d=n("./src/Utils/UtilFns.ts");t.Player=class{constructor(e=new i.Parameter,t=0,n=-1,a=[]){this._parameter=e,this._status=t,this._round=n,this._attributeManager=new r.AttributeManager,this._roundResultEventQueue=[],this._courseNameHelper=new o.NameHelper(s.COURSE_NAME_TEXTS),this._companyNameHelper=new o.NameHelper(u.COMPANY_NAME_TEXTS),this._internOffers="",this._offers="",this._historyEvents=a}get parameter(){return this._parameter}set parameter(e){this._parameter=e}get status(){return this._status}set status(e){this._status=e}get round(){return this._round}set round(e){this._round=e}get roundResultEventQueue(){return this._roundResultEventQueue}set roundResultEventQueue(e){this._roundResultEventQueue=e}get attributeIds(){return this._attributeManager.getActivatedAttributeIds()}get attributeStrings(){let e=[];for(let[t,n]of this._attributeManager.getVisibleActivatedAttributeDescriptions())t!=l.ATTRIBUTE_TEXT_MAP.get(10)[0]&&t!=l.ATTRIBUTE_TEXT_MAP.get(12)[0]||(t+=" ("+this._internOffers+")",n+=" ("+this._internOffers+")"),t==l.ATTRIBUTE_TEXT_MAP.get(13)[0]&&(t+=" ("+this._offers+")",n+=" ("+this._offers+")"),e.push([t,n]);return e}get courseNameHelper(){return this._courseNameHelper}set courseNameHelper(e){this._courseNameHelper=e}get companyNameHelper(){return this._companyNameHelper}set companyNameHelper(e){this._companyNameHelper=e}get internOffers(){return this._internOffers}set internOffers(e){this._internOffers=e}get offers(){return this._offers}set offers(e){this._offers=e}get historyEvents(){return this._historyEvents}set historyEvents(e){this._historyEvents=e}checkVitals(){this._parameter.health<=0?this._status=3:this._parameter.scores.filter((e=>"F"==e)).length>=1?this._status=2:this._round>=40&&this.attributeIds.filter((e=>12==e||13==e)).length>0?this._status=1:this._round>=a.END_ROUND&&(this._status=4)}modifyParameter(e,t,n){let r=this._attributeManager.getAttributeAffectOnParameter(e,t,n);switch((0,d.DebugLogger)("Modify on "+e+", incoming "+t+", corrected "+r),e){case"study":this._parameter.study+=r;break;case"coding":this._parameter.coding+=r;break;case"health":this._parameter.health+=r;break;case"work":this._parameter.working+=r;break;case"interview":this._parameter.interviewProbability+=r}}assignAttribute(e){this._attributeManager.activateAttribute(e)}removeAttribute(e){this._attributeManager.disableAttribute(e)}maintainAttribute(e=!1){this._attributeManager.updateActivatedAttributes(this,e)}maintainCareer(){this.round==a.SUMMER_I_ROUNDS[0]&&(this.companyNameHelper.reset(),this._internOffers.length&&(this._internOffers=this._internOffers.split(",")[0],this._companyNameHelper.registerName(this.round,this._internOffers))),(0,d.DebugLogger)("intern offers are: "),(0,d.DebugLogger)(this._internOffers)}maintain(){this.maintainAttribute(),this.maintainCareer(),this.checkVitals()}reset(){this.maintainAttribute(!0),this.parameter=new i.Parameter,this.round=-1,this.status=0,this.roundResultEventQueue=[],this._companyNameHelper.reset(),this._courseNameHelper.reset(),this._internOffers="",this._offers="",this._historyEvents=[]}}},"./src/Player/PlayerConstants.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.INITIAL_INTERVIEW_PROBABILITY_LOW=t.INITIAL_INTERVIEW_PROBABILITY_HIGH=t.INITIAL_INTERVIEW_PROBABILITY=t.INITIAL_CODING_VALUE_LOW=t.INITIAL_CODING_VALUE_HIGH=t.INITIAL_CODING_VALUE=t.INITIAL_STUDY_VALUE_LOW=t.INITIAL_STUDY_VALUE_HIGH=t.INITIAL_STUDY_VALUE=t.INITIAL_HEALTH_VALUE_LOW=t.INITIAL_HEALTH_VALUE=t.MAX_INTERVIEW_PROBABILITY=t.MAX_WORKING=t.MAX_CODING=t.MAX_STUDY=t.MAX_HEALTH=void 0,t.MAX_HEALTH=100,t.MAX_STUDY=100,t.MAX_CODING=128,t.MAX_WORKING=100,t.MAX_INTERVIEW_PROBABILITY=50,t.INITIAL_HEALTH_VALUE=80,t.INITIAL_HEALTH_VALUE_LOW=70,t.INITIAL_STUDY_VALUE=65,t.INITIAL_STUDY_VALUE_HIGH=70,t.INITIAL_STUDY_VALUE_LOW=60,t.INITIAL_CODING_VALUE=10,t.INITIAL_CODING_VALUE_HIGH=30,t.INITIAL_CODING_VALUE_LOW=5,t.INITIAL_INTERVIEW_PROBABILITY=20,t.INITIAL_INTERVIEW_PROBABILITY_HIGH=25,t.INITIAL_INTERVIEW_PROBABILITY_LOW=10},"./src/Player/Static/CompanyNameTexts.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.COMPANY_NAME_TEXTS=void 0,t.COMPANY_NAME_TEXTS=["Doogal","Fecesbuck","Micropeanut","LoopedIn","Appee","Nukevdia","Orca","Frugal","Airp2p","WeSuck","ScamChat","Noflix"]},"./src/Player/Static/CourseNameTexts.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.COURSE_NAME_TEXTS=void 0,t.COURSE_NAME_TEXTS=["Computer Architecture","Design and Analysis of Algorithms","Principles of Operating Systems","Structured Programming and Formal Algorithm","Object Oriented Design","Machine Learning","Principles of Social Media & Data Mining","Blockchain & Cryptocurrencies","Design Patterns","Object Oriented Programming with C++","Compiler Principles","Distributed Computation","Computer Vision","Computer Security","Social Engineering & Security Penetration"]},"./src/Ui/SUTheme.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SuThemePrinter=void 0;t.SuThemePrinter=class{printSuTheme(){document.getElementById("su-su-seal").style.display="block"}clearSuTheme(){document.getElementById("su-su-seal").style.display="none"}}},"./src/Ui/Static/UiTexts.ts":(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getUiRoundText=t.getUiText=t.ATTRIBUTE_DESCRIPTION_MAP=t.ATTRIBUTE_DESCRIPTION_GENERAL_TEXT=t.RULE_HTMLS=void 0;const r=n("./src/Utils/Calendar.ts"),a=[new Map([["study","Study"],["score","Grade"],["coding","Coding"],["health","Sanity"],["time","Current Time"],["attribute","Attribute"],["rule","Rule"],["rule-close","I see"],["attribute-btn-close","I see"]]),new Map([["study","学力"],["score","绩点"],["coding","刷题力"],["health","身心健康"],["time","当前时间"],["attribute","人物属性"],["rule","游戏规则"],["rule-close","原来如此"],["attribute-btn-close","原来如此"]])];t.RULE_HTMLS=['<p>Complete the MSCS program and get at least one offer before the OPT grace period ends!</p>\n    <ul>\n        <li class="diamond">\n            To survive the semester, you have to get C or better grade in final.\n        </li>\n        <li class="diamond">\n            If your sanity droppes to zero or below, you will decide to end the MSCS\n            program by yourself. So slack off if it needs to.\n        </li>\n        <li class="diamond">\n            Send resume will not ensure a followup, but there\'s no free oppourtunity\n            if you do not take the first step.\n        </li>\n        <li class="diamond">\n            If you find it\'s hard to win, that\'s expected, as it is the same in the\n            real life.\n        </li>\n    </ul>','<p>顺利完成美研CS项目, 并且在签证过期前拿到全职offer吧!</p>\n    <ul>\n        <li class="diamond">\n            每学期的期末绩点需要保持在C或者以上, 否则会被退学.\n        </li>\n        <li class="diamond">\n            如果身心健康降到0或以下, 你将放弃学业自愿回国, 所以必要的时候该摸鱼就摸鱼吧.\n        </li>\n        <li class="diamond">\n            投简历并不保证会有面试, 但不投肯定没有. \n        </li>\n        <li class="diamond">\n            如果你觉得游戏太难, 请理解美研CS学生生活本就如此. \n        </li>\n    </ul>'],t.ATTRIBUTE_DESCRIPTION_GENERAL_TEXT=["The descriptions below does not include their affect to events, \n    only general buff / debuff to the player's parameter","以下描述仅包括对玩家各项参数值的增益 / 减益, 并不包括这些属性对游戏事件的额外影响."],t.ATTRIBUTE_DESCRIPTION_MAP=new Map([[0,["Former coding contestant - Furtherer increase coding gaining, reduce sanity lost due to coding.","前算法竞赛选手 - 显著增加刷题收益, 减少因刷题造成的身心健康损害."]],[1,["Hop into CS without experience - Furtherer reduce coding gaining, increase sanity lost due to coding.","转码小白 - 显著减少刷题收益, 增加因刷题造成的身心健康损害."]],[2,["Experienced in self-cooking - Reduce sanity lost generally.","精通自炊 - 减少身心健康损害."]],[3,["Sensitive and sickly - Increase sanity lost generally.","焦虑多病 - 增加身心健康损害。"]],[4,["Top 10 school - Slightly reduce study gaining, increase interview probability","名校 - 轻微减少学习收益, 增加收到面试概率."]],[5,["Syracuse university - Nothing but some fancy theme TO BE implemented.","雪城大学 - 除了(无良作者承诺会有的)与众不同的皮肤以外啥都没有"]],[6,["Community Collage - Increase study gaining.","社区大学 - 增加学习收益."]],[7,["City that never sleeps - Reduce study & coding gainings, increase sanity gaining, reduce sanity lost.","不夜城 - 减少学习, 刷题收益, 增加身心健康收益, 减少身心健康损害."]],[8,["More cows than people countryside - Increase study & coding gainings, reduce sanity gaining, increase sanity lost.","远郊大农村 - 增加学习, 刷题收益, 减少身心健康收益, 增加身心健康损害."]],[9,["Next to Silicon Vally - GREATLY increase interview probability.","IT中心 - 极大幅度增加收到面试概率."]],[10,["Have intership offer - Reduce study & coding gainings, increase sanity gaining, reduce sanity lost.","有实习offer了 - 减少学习, 刷题收益, 增加身心健康收益, 减少身心健康损害."]],[11,["Intern in summer break - Increase interview probability.","有暑假实习 - 增加收到面试概率."]],[12,["Have return offer - Reduce study gaining, furtherer reduce coding gaining, furtherer increase sanity gaining, futherer reduce sanity lost.","有return offer - 减少学习收益, 显著减少刷题收益, 显著增加身心健康收益, 显著减少身心健康损害."]],[13,["Have offer letter - Reduce study gaining, furtherer reduce coding gainings, furtherer increase sanity gaining, furtherer reduce sanity lost.","有offer了 - 减少学习收益, 显著减少刷题收益, 显著增加身心健康收益, 显著减少身心健康损害."]],[14,["Nerd - Increase study & coding gainings, slightly reduce interview probability, increase sanity lost generally.","书呆子 - 增加学习, 刷题收益, 轻微减少收到面试概率, 增加身心健康损害."]],[15,["Socialite - Increase study & sanity gainings, slightly increase interview probability, reduce sanity lost.","交际花 - 增加学习, 身心健康收益, 轻微增加收到面试概率, 减少身心健康损害."]]]),t.getUiText=function(e,t){return t.lang?a[0].get(e):a[1].get(e)},t.getUiRoundText=function(e,t){let n=r.CALENDAR.get(e);if(t.lang)return n;{if(-1==e)return"序幕, 第一年八月";if(48==e)return"终局, 第三年九月";let t="";n.includes("Fall II")?t="第三学期":n.includes("Spring II")?t="第四学期":n.includes("Fall I")?t="第一学期":n.includes("Spring I")?t="第二学期":n.includes("Winter Break")?t="寒假":n.includes("Summer Break")?t="暑假":n.includes("OPT Grace Period")&&(t="OPT签证过渡期");let r="";n.includes("Early")?r="上旬":n.includes("Late")&&(r="下旬");let a="";n.includes("January")?a="一月":n.includes("February")?a="二月":n.includes("March")?a="三月":n.includes("April")?a="四月":n.includes("May")?a="五月":n.includes("June")?a="六月":n.includes("July")?a="七月":n.includes("August")?a="八月":n.includes("September")?a="九月":n.includes("October")?a="十月":n.includes("November")?a="十一月":n.includes("December")&&(a="十二月");let i="";return n.includes("Year III")?i="第三年":n.includes("Year II")?i="第二年":n.includes("Year I")&&(i="第一年"),t+", "+i+" "+a+r}}},"./src/Ui/UiManager.ts":(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UiManager=void 0;const r=n("./src/Player/Parameter.ts"),a=n("./src/Game/LanguageFlag.ts"),i=n("./src/Ui/Static/UiTexts.ts"),o=n("./src/Utils/UtilFns.ts"),s=n("./src/Ui/SUTheme.ts"),u=n("./src/Player/PlayerConstants.ts");t.UiManager=class{constructor(e=new a.LanguageFlag){this._lang=new a.LanguageFlag,this._lastParameter=new r.Parameter(101),this._lastRoundNumber=-1,this._lastAttributeStrings=[],this._lastDescriptions=[],this._lastOptions=new Map,this._lastAttributes=[],this._suThemePrinter=new s.SuThemePrinter,this.resetLang(e),this.resetFrame(),this.printFrame(),this.printRuleModal(),this.setupModals()}setLang(e){this._lang=e}resetLang(e){this._lang=e,document.getElementById("lang-switch-checkbox").onclick=()=>{this._lang.lang=!this._lang.lang,this.printFrame(),this._lastParameter.study<=u.MAX_STUDY&&this.printParameter(this._lastParameter),this.printTime(this._lastRoundNumber),this.printAttributes(this._lastAttributeStrings),this.reprintEvent(),this.reprintRuleModal(),this.reprintAttributeModal()}}resetFrame(){this.clearContainer(document.getElementById("study-key-span")),this.clearContainer(document.getElementById("scores-key-span")),this.clearContainer(document.getElementById("coding-key-span")),this.clearContainer(document.getElementById("health-key-span")),this.clearContainer(document.getElementById("attribute-key-span"))}reset(){this.clearContainer(document.getElementById("event-message-box")),this.clearContainer(document.getElementById("event-option-window")),this.clearContainer(document.getElementById("study-value-span")),this.clearContainer(document.getElementById("scores-value-span")),this.clearContainer(document.getElementById("coding-value-span")),this.clearContainer(document.getElementById("health-value-span")),this.clearContainer(document.getElementById("attribute-ul")),this.clearContainer(document.getElementById("time-value-box")),this._suThemePrinter.clearSuTheme(),this.resetAttributeModal(),this._lastAttributeStrings=[],this._lastAttributes=[],this._lastDescriptions=[],this._lastOptions=new Map,this._lastParameter=new r.Parameter(101),this._lastRoundNumber=-1}printSuTheme(){this._suThemePrinter.printSuTheme()}printFrame(){document.getElementById("study-key-span").innerHTML=(0,i.getUiText)("study",this._lang),document.getElementById("scores-key-span").innerHTML=(0,i.getUiText)("score",this._lang),document.getElementById("coding-key-span").innerHTML=(0,i.getUiText)("coding",this._lang),document.getElementById("health-key-span").innerHTML=(0,i.getUiText)("health",this._lang),document.getElementById("attribute-key-span").innerHTML=(0,i.getUiText)("attribute",this._lang),document.getElementById("rule-btn").innerHTML=(0,i.getUiText)("rule",this._lang),document.getElementById("rule-btn-close").innerHTML=(0,i.getUiText)("rule-close",this._lang),document.getElementById("attribute-btn-close").innerHTML=(0,i.getUiText)("attribute-btn-close",this._lang)}async printAndSetupEvent(e,t){this._lastDescriptions=e,this._lastOptions=t,document.getElementById("event-message-box").innerHTML=e[this._lang.lang?0:1];let n=document.getElementById("event-option-window"),r=[];for(let[e,[a,i]]of t.entries()){let t=document.createElement("a");t.text=this._lang.lang?a:i,t.dataset.eventid=e.toString(),t.className="event-option-btn",n.appendChild(t);let o=new Promise((e=>{t.onclick=()=>{this.clearContainer(n),e(+t.dataset.eventid)}}));r.push(o)}return Promise.any(r)}reprintEvent(){document.getElementById("event-message-box").innerHTML=this._lastDescriptions[this._lang.lang?0:1];let e=document.getElementById("event-option-window");for(let t of e.children){let e=t,n=+e.dataset.eventid,r=this._lastOptions.get(n);e.text=this._lang.lang?r[0]:r[1]}}printParameter(e){this._lastParameter=e,document.getElementById("study-value-span").innerHTML=(0,o.DisplayNumber)(e.study),document.getElementById("scores-value-span").innerHTML=this.scoreValueToDisplay(e.scores);let t=document.getElementById("coding-value-span"),n=this.codingValueToDisplay(e.coding);t.innerHTML=n,document.getElementById("health-value-span").innerHTML=(0,o.DisplayNumber)(e.health)}printAttributes(e){this._lastAttributeStrings=e;let t=document.getElementById("attribute-ul");this.clearContainer(t);for(let n of e){let e=document.createElement("li");e.className="diamond",e.innerHTML=this._lang.lang?n[0]:n[1],t.appendChild(e)}}printTime(e){this._lastRoundNumber=e,document.getElementById("time-value-box").innerHTML=this.roundToDisplay(e,this._lang)}printRuleModal(){let e=document.getElementById("rule-btn"),t=document.getElementById("rule-modal-window"),n=document.getElementById("rule-btn-close");e.onclick=()=>{t.style.display="block"},n.onclick=()=>{t.style.display="none"},window.onclick=function(e){e.target==t&&(t.style.display="none")},this.reprintRuleModal()}reprintRuleModal(){document.getElementById("rule-modal-text-window").innerHTML=this._lang.lang?i.RULE_HTMLS[0]:i.RULE_HTMLS[1]}printAttributeModal(e){this._lastAttributes=e,document.getElementById("attribute-key-span").style.textDecoration="underline";let t=document.getElementById("attribute-key-span"),n=document.getElementById("attribute-modal-window"),r=document.getElementById("attribute-btn-close");t.onclick=()=>{n.style.display="block"},r.onclick=()=>{n.style.display="none"},this.reprintAttributeModal()}reprintAttributeModal(){if(!this._lastAttributes.length)return;let e=document.getElementById("attribute-description-ul");this.clearContainer(e),document.getElementById("attribute-description-text").innerHTML=this._lang.lang?i.ATTRIBUTE_DESCRIPTION_GENERAL_TEXT[0]:i.ATTRIBUTE_DESCRIPTION_GENERAL_TEXT[1];for(let t of this._lastAttributes){let n=document.createElement("li");n.className="diamond";let r=i.ATTRIBUTE_DESCRIPTION_MAP.get(t);n.innerHTML=this._lang.lang?r[0]:r[1],e.append(n)}}setupModals(){let e=document.getElementById("rule-modal-window"),t=document.getElementById("attribute-modal-window");window.onclick=function(n){n.target==t&&(t.style.display="none"),n.target==e&&(e.style.display="none")}}scoreValueToDisplay(e){let t="<span>",n="</span>";if(0==e.length){return t+(this._lang.lang?"N/A":"无")+n}{let r="";for(let a=0;a<e.length;++a)0!=a&&(r+=", "),r+=t+e[a]+n;return r}}codingValueToDisplay(e){return e<=8?this._lang.lang?"Newbie":"菜鸡":e<=16?this._lang.lang?"Normal":"普通":e<=32?this._lang.lang?"Experienced":"熟练":e<=64?this._lang.lang?"Master":"大师":this._lang.lang?"GrandMaster":"宗师"}roundToDisplay(e,t){return(0,i.getUiRoundText)(e,t)}clearContainer(e){for(;e.firstChild;)e.removeChild(e.lastChild)}resetAttributeModal(){this.clearContainer(document.getElementById("attribute-description-ul")),document.getElementById("attribute-key-span").removeAttribute("onclick"),document.getElementById("attribute-key-span").style.textDecoration=""}}},"./src/Utils/Calendar.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.isInVacation=t.CALENDAR=void 0,t.CALENDAR=new Map([[-1,"Summer - August, Year I"],[0,"Fall I - Early September, Year I"],[1,"Fall I - Late September, Year I"],[2,"Fall I - Early October, Year I"],[3,"Fall I - Late October, Year I"],[4,"Fall I - Early November, Year I"],[5,"Fall I - Late November, Year I"],[6,"Fall I - Early December, Year I"],[7,"Winter Break - Late December, Year I"],[8,"Winter Break - Early January, Year II"],[9,"Spring I - Late January, Year II"],[10,"Spring I - Early February, Year II"],[11,"Spring I - Late February, Year II"],[12,"Spring I - Early March, Year II"],[13,"Spring I - Late March, Year II"],[14,"Spring I - Early April, Year II"],[15,"Spring I - Late April, Year II"],[16,"Summer Break - Early May, Year II"],[17,"Summer Break - Late May, Year II"],[18,"Summer Break - Early June, Year II"],[19,"Summer Break - Late June, Year II"],[20,"Summer Break - Early July, Year II"],[21,"Summer Break - Late July, Year II"],[22,"Summer Break - Early August, Year II"],[23,"Summer Break - Late August, Year II"],[24,"Fall II - Early September, Year II"],[25,"Fall II - Late September, Year II"],[26,"Fall II - Early October, Year II"],[27,"Fall II - Late October, Year II"],[28,"Fall II - Early November, Year II"],[29,"Fall II - Late November, Year II"],[30,"Fall II - Early December, Year II"],[31,"Winter Break - Late December, Year II"],[32,"Winter Break - Early January, Year III"],[33,"Spring II - Late January, Year III"],[34,"Spring II - Early February, Year III"],[35,"Spring II - Late February, Year III"],[36,"Spring II - Early March, Year III"],[37,"Spring II - Late March, Year III"],[38,"Spring II - Early April, Year III"],[39,"Spring II - Late April, Year III"],[40,"OPT Grace Period - Early May, Year III"],[41,"OPT Grace Period - Late May, Year III"],[42,"OPT Grace Period - Early June, Year III"],[43,"OPT Grace Period - Late June, Year III"],[44,"OPT Grace Period - Early July, Year III"],[45,"OPT Grace Period - Late July, Year III"],[46,"OPT Grace Period - Early August, Year III"],[47,"OPT Grace Period - Late August, Year III"],[48,"END GAME - September, Year III"]]),t.isInVacation=function(e){return t.CALENDAR.get(e).includes("Break")||t.CALENDAR.get(e).includes("OPT")}},"./src/Utils/Rng.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getNormalDistributedInt=t.getRandomInt=void 0,t.getRandomInt=function(e){return Math.floor(Math.random()*e)},t.getNormalDistributedInt=function(e,t){const{z0:n,z1:r}=function(){const e=Math.random(),t=Math.random();return{z0:Math.sqrt(-2*Math.log(e))*Math.cos(2*Math.PI*t),z1:Math.sqrt(-2*Math.log(e))*Math.sin(2*Math.PI*t)}}();return n*t+e}},"./src/Utils/SimpleTemplateRender.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SimpleTemplateRender=t.CONDITION_TRUE=t.CONDITION_FALSE=void 0;const n="{{",r="}}",a="IF",i="ELSE";t.CONDITION_FALSE="CONDITION_FALSE",t.CONDITION_TRUE="CONDITION_TRUE";const o=[a,i,"FI",t.CONDITION_FALSE,t.CONDITION_TRUE];t.SimpleTemplateRender=class{constructor(){this._tokens=[]}render(e,t){this._tokens=[];let i=0;for(;i<e.length;){let o=e.indexOf(n,i);if(-1==o){this._tokens.push(e.slice(i));break}{let s=e.slice(i,o);""!=s&&this._tokens.push(s);let u=e.indexOf(r,o),l=e.slice(o+2,u).trim();"FI"==l?this.tokensEval():l.startsWith(a)?this._tokens.push(n+t.get(l.slice(3,l.length).trim())+r):this._tokens.push(t.has(l)?t.get(l).toString():n+l+r),i=u+2}}let o=this._tokens.join("");return this._tokens=[],o}tokensEval(){let e="";for(;0==o.filter((e=>this.wrapKeyWord(e)==this._tokens[this._tokens.length-1])).length;)e=this._tokens[this._tokens.length-1]+e,this._tokens.pop();let n="";if(this._tokens[this._tokens.length-1]!=this.wrapKeyWord(i))n=e,e="";else for(this._tokens.pop();0==o.filter((e=>this.wrapKeyWord(e)==this._tokens[this._tokens.length-1])).length;)n=this._tokens[this._tokens.length-1]+n,this._tokens.pop();let r=this._tokens[this._tokens.length-1];this._tokens.pop(),this._tokens.push(r==this.wrapKeyWord(t.CONDITION_TRUE)?n:e)}wrapKeyWord(e){return n+e+r}}},"./src/Utils/UtilFns.ts":(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DebugLogger=t.DisplayNumber=void 0;const r=n("./src/Game/GameManager.ts");t.DisplayNumber=function(e){let t=e.toString();return t.includes(".")?"."==t.charAt(t.length-2)?t:(Math.round(100*e)/100).toFixed(2):t},t.DebugLogger=function(e){r.DEBUG_FLAG&&console.log(e)}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}var r={};(()=>{var e=r;Object.defineProperty(e,"__esModule",{value:!0});const t=n("./src/Game/GameManager.ts");(new class{constructor(){this._gameManager=new t.GameManager}async start(){this._gameManager.gameRun()}}).start()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,